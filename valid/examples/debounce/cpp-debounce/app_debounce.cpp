// -*- indent-tabs-mode: nil -*-
/*****************************************************************************
** Generated by DES-to-C++-Generator, Revision 2.6b1 [roundtrip]
** Fri Dec 10 14:03:21 1999
** (C) Siemens AG, ZT SE 4, 1999. All Rights Reserved.
** Authors: Dr. Markus Kaltenbach, Dr. Robi Malik
*****************************************************************************/

#ifdef __GNUG__
#pragma implementation
#endif

#include <iostream.h>

#include "app_debounce.h"


//# DesCode_Actions_debounce: Constructors & Destructors #####################

DesCode_Actions_debounce::
DesCode_Actions_debounce()
{  
  mLastKey = 0;
  mTime = -1;
}


//# DesCode_Actions_debounce: Customized Execution Routine ###################

const int TIMEOUT = 5;

void DesCode_Actions_debounce::
execute()
{
  // Initialize automaton
  init();
  // Loop forever ...
  for (;;) {
    // 1.) Read uncontrollables from keyboard and signal them:
    char buffer[1024];
    cout << "New input: " << flush;
    cin.getline(buffer, 1024);
    if (!cin) {
      cout << "<QUIT>" << endl;
      break;
    }
    char key = buffer[0];
    if (key != mLastKey) {
      Signal_new_value(1);
      mLastKey = key;
    }
    if (mTime >= 0) {
      if (++mTime == TIMEOUT) {
        Signal_timeout(1);
      }
    }
    // 2.) Perform automaton step by calling superclass method:
    step();
  }
}


/* DesCode_Actions_debounce: Action code fragments */

/*****************************************************************************
** Code fragment for event: timeout
*****************************************************************************/
void DesCode_Actions_debounce::
Action_timeout(int bit)
{
  DesCode_Automaton_debounce::Action_timeout(bit);
  if (bit == 1) {
    mTime = -1;
  }
}


/*****************************************************************************
** Code fragment for event: chg_value
*****************************************************************************/
void DesCode_Actions_debounce::
Action_chg_value(int bit)
{
  DesCode_Automaton_debounce::Action_chg_value(bit);
  if (bit == 1) {
    cout << "*** Value HAS changed ***" << endl;
  }
}


/*****************************************************************************
** Code fragment for event: reset
*****************************************************************************/
void DesCode_Actions_debounce::
Action_reset(int bit)
{
  DesCode_Automaton_debounce::Action_reset(bit);
  if (bit == 1) {
    mTime = -1;
  }
}


/*****************************************************************************
** Code fragment for event: timer
*****************************************************************************/
void DesCode_Actions_debounce::
Action_timer(int bit)
{
  DesCode_Automaton_debounce::Action_timer(bit);
  if (bit == 1) {
    mTime = 0;
  }
}

