Supremica Bugs 2011
Please use the bug tracking system in GitHub instead of adding to this file.

2011-09-30 MF 
Bug state: Reported
Example: verriegel4
Algo: CNB, compositional
What happens: A single state supervisor is returned, but should be 0 state. In effect, a blocking system is returned.
What should happen: A message should pop up that the problem has no (useful) solution. And if any supervisors should be added (which is not obvious), they should have zero states.

2011-09-30 MF 
Bug state: Reported
Example: verriegel4
Algo: CNB, compositional
What happens: A (single state, see above) supervisor is returned with its type set to "Plant"
What should happen: Any supervisor returned should have its type set to "Supervisor".

2011-09-30 MF 
Bug state: Reported
Example: verriegel4
Algo: CNB, compositional (waters)
What happens: Incorrect supervisors are returned, due to the properties not being considered. The problem has no (useful) solution, only the null supervisor.
What should happen: Correct supervisors should be returned, or a message displayed saying that no supervisors exist.
2011-01-10 RM
Bug state: Fixed
What now happens: Properties in the Waters module are no longer sent to the
  analyzer, unless the configuration option
  GUI_ANALYZER_SEND_PROPERTIES_TO_ANALYZER is set.

2011-09-30 MF 
Bug state: Reported
What happens: In the analyzer, when an automaton graph shows and that automaton is deleted, the graph does not disappear.
What should happen: The graph should disappear, showing a blank window space.

2011-09-30 MF 
Bug state: Reported
Example: 3 Users with a controllable b, c uncontrollable
Algo: CNB, compositional
What happens: A supervisor with a bunch of tau-events and an un-reachable dump state is returned.
What should happen: The tau-events should be replaced by their corresponding real events. Compare the monolithic solution. The dump state should be removed. The compositional solution has the exact same structure, excpet it has tau-events for real events.

2011-10-05 MF
Not a bug: Reported
What: We need a set of globally defined delimiter characters that we can use when generating strings (names, labels etc) internally. These need to be characters that the user cannot manually input; only names/labels generated automatically from within Supremica can use these.
Why: To minimize conflicts between internally (automatically) generated labels and manually input ones.
2011-10-15 RM
I am using ":" for this purpose.
