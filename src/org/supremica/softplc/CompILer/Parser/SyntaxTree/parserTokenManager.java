/* Generated By:JJTree&JavaCC: Do not edit this line. parserTokenManager.java */
package org.supremica.softplc.CompILer.Parser.SyntaxTree;
import java.io.*;
import org.supremica.softplc.CompILer.Parser.*;
import java.util.StringTokenizer;

public class parserTokenManager implements parserConstants
{
  public static  java.io.PrintStream debugStream = System.out;
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x80040000000L) != 0L)
         {
            jjmatchedKind = 118;
            return 472;
         }
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 118;
            return 424;
         }
         if ((active0 & 0x80000000L) != 0L)
            return 56;
         if ((active0 & 0x20000000L) != 0L)
            return 473;
         if ((active0 & 0x1e40000000L) != 0L || (active1 & 0x400000L) != 0L)
            return 474;
         if ((active1 & 0x800000000080L) != 0L)
         {
            jjmatchedKind = 118;
            return 319;
         }
         if ((active0 & 0x200000000000L) != 0L || (active1 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 118;
            return 265;
         }
         if ((active0 & 0x8000100000000000L) != 0L || (active1 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 117;
            return 90;
         }
         if ((active1 & 0x100000L) != 0L)
            return 45;
         if ((active1 & 0xa000000L) != 0L)
         {
            jjmatchedKind = 118;
            return 4;
         }
         if ((active1 & 0x2000200004000L) != 0L)
         {
            jjmatchedKind = 118;
            return 325;
         }
         if ((active0 & 0x800600c000000L) != 0L || (active1 & 0x10000000000L) != 0L)
            return 302;
         if ((active1 & 0x800000L) != 0L)
            return 440;
         if ((active1 & 0x40000200000L) != 0L)
            return 132;
         if ((active1 & 0x600L) != 0L)
         {
            jjmatchedKind = 118;
            return 252;
         }
         if ((active1 & 0x40012001b830L) != 0L)
         {
            jjmatchedKind = 118;
            return 474;
         }
         if ((active1 & 0xc800000040L) != 0L)
         {
            jjmatchedKind = 117;
            return 237;
         }
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 118;
            return 338;
         }
         if ((active0 & 0x20000000000000L) != 0L || (active1 & 0x2494000101L) != 0L)
         {
            jjmatchedKind = 118;
            return 316;
         }
         if ((active0 & 0xf0000000000L) != 0L)
         {
            jjmatchedKind = 118;
            return 136;
         }
         return -1;
      case 1:
         if ((active1 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 1;
            return 475;
         }
         if ((active1 & 0x600L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 255;
         }
         if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 298;
         }
         if ((active0 & 0x50000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 160;
         }
         if ((active0 & 0x4000081000000000L) != 0L || (active1 & 0x1000020000L) != 0L)
            return 474;
         if ((active1 & 0x2000000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 324;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 313;
         }
         if ((active0 & 0x828000000000000L) != 0L || (active1 & 0x5927fe01f931L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 474;
         }
         if ((active0 & 0x2008000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 311;
         }
         if ((active1 & 0xc800000040L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 236;
         }
         if ((active1 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 89;
         }
         if ((active0 & 0x8000100000000000L) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 1;
            return 121;
         }
         if ((active1 & 0x800000000080L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 1;
            return 476;
         }
         return -1;
      case 2:
         if ((active0 & 0x200000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 297;
         }
         if ((active1 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 46;
               jjmatchedPos = 2;
            }
            return 72;
         }
         if ((active0 & 0x4000000000L) != 0L || (active1 & 0xc0012001b820L) != 0L)
            return 474;
         if ((active0 & 0x2008000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 310;
         }
         if ((active1 & 0x600L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 254;
         }
         if ((active0 & 0x8000100000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 120;
         }
         if ((active1 & 0x40L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 242;
         }
         if ((active1 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 112;
               jjmatchedPos = 2;
            }
            return 326;
         }
         if ((active1 & 0xc000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 477;
         }
         if ((active1 & 0x20000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 475;
         }
         if ((active0 & 0x828000000000000L) != 0L || (active1 & 0x192ede004191L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 474;
         }
         if ((active0 & 0x50000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 170;
         }
         return -1;
      case 3:
         if ((active0 & 0x2008000000L) != 0L)
            return 309;
         if ((active0 & 0x50000000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 48;
               jjmatchedPos = 3;
            }
            return 169;
         }
         if ((active0 & 0x8000000000000L) != 0L || (active1 & 0x110000000000L) != 0L)
            return 474;
         if ((active0 & 0x20000000000000L) != 0L || (active1 & 0x2494000181L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 2;
            }
            return 53;
         }
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0xeca4a004050L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 3;
            }
            return 474;
         }
         if ((active1 & 0x600L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 49;
               jjmatchedPos = 3;
            }
            return 253;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 3;
            }
            return 119;
         }
         if ((active0 & 0x200000000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 3;
            }
            return 296;
         }
         if ((active1 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 112;
               jjmatchedPos = 2;
            }
            return 53;
         }
         if ((active1 & 0x400120019820L) != 0L)
            return 53;
         return -1;
      case 4:
         if ((active0 & 0x800000000000000L) != 0L)
            return 474;
         if ((active0 & 0x8020000000000000L) != 0L || (active1 & 0x24e2ffe01dff1L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 4;
            return 474;
         }
         if ((active0 & 0x2000000000L) != 0L)
            return 308;
         if ((active1 & 0xc000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 3;
            }
            return 53;
         }
         if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 4;
            return 295;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 4;
            return 94;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 48;
               jjmatchedPos = 3;
            }
            return 168;
         }
         return -1;
      case 5:
         if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 5;
            return 268;
         }
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x20000000040L) != 0L)
            return 474;
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 5;
            return 307;
         }
         if ((active1 & 0x600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 4;
            }
            return 53;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 5;
            return 167;
         }
         if ((active0 & 0x20000000000000L) != 0L || (active1 & 0x24ceffe01d9b1L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 5;
            return 474;
         }
         if ((active0 & 0x100000000000L) != 0L)
            return 95;
         return -1;
      case 6:
         if ((active1 & 0x40000100L) != 0L)
            return 474;
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 6;
            return 306;
         }
         if ((active0 & 0x200000000000L) != 0L)
            return 269;
         if ((active0 & 0x20000000000000L) != 0L || (active1 & 0x24cefbe01ceb1L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 6;
            return 474;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 6;
            return 166;
         }
         if ((active1 & 0x1000L) != 0L)
         {
            if (jjmatchedPos < 5)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 5;
            }
            return 53;
         }
         return -1;
      case 7:
         if ((active0 & 0x20000000000000L) != 0L || (active1 & 0x20c082a004000L) != 0L)
            return 474;
         if ((active0 & 0x2000000000L) != 0L)
         {
            if (jjmatchedPos < 6)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 6;
            }
            return 305;
         }
         if ((active1 & 0x40e794019eb1L) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 7;
            }
            return 474;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 7;
            }
            return 165;
         }
         return -1;
      case 8:
         if ((active1 & 0x8000000020L) != 0L)
            return 474;
         if ((active1 & 0x8000000L) != 0L)
            return 53;
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 8;
            return 304;
         }
         if ((active1 & 0x406794019e91L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 8;
            return 474;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 7;
            }
            return 164;
         }
         return -1;
      case 9:
         if ((active1 & 0x404100011e91L) != 0L)
            return 474;
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 9;
            return 303;
         }
         if ((active1 & 0x269c008000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 9;
            return 474;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 9;
            return 163;
         }
         return -1;
      case 10:
         if ((active0 & 0x2000000000L) != 0L || (active1 & 0x80000000L) != 0L)
            return 474;
         if ((active1 & 0x261c008000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 10;
            return 474;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 10;
            return 162;
         }
         return -1;
      case 11:
         if ((active1 & 0x2014008000L) != 0L)
            return 474;
         if ((active0 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos != 11)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 11;
            }
            return 478;
         }
         if ((active1 & 0x608000000L) != 0L)
         {
            if (jjmatchedPos != 11)
            {
               jjmatchedKind = 118;
               jjmatchedPos = 11;
            }
            return 474;
         }
         return -1;
      case 12:
         if ((active0 & 0x40000000000L) != 0L || (active1 & 0x200000000L) != 0L)
            return 474;
         if ((active1 & 0x10000000L) != 0L)
            return 53;
         if ((active1 & 0x408000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 12;
            return 474;
         }
         return -1;
      case 13:
         if ((active1 & 0x8000000L) != 0L)
            return 474;
         if ((active1 & 0x410000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 13;
            return 474;
         }
         return -1;
      case 14:
         if ((active1 & 0x410000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 14;
            return 474;
         }
         return -1;
      case 15:
         if ((active1 & 0x410000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 15;
            return 474;
         }
         return -1;
      case 16:
         if ((active1 & 0x400000000L) != 0L)
            return 474;
         if ((active1 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 16;
            return 474;
         }
         return -1;
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
static private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 35:
         return jjStopAtPos(0, 28);
      case 37:
         return jjStartNfaWithStates_0(0, 84, 45);
      case 40:
         jjmatchedKind = 55;
         return jjMoveStringLiteralDfa1_0(0x20L, 0x0L);
      case 41:
         return jjStopAtPos(0, 56);
      case 42:
         return jjStopAtPos(0, 88);
      case 44:
         return jjStopAtPos(0, 58);
      case 45:
         return jjStartNfaWithStates_0(0, 29, 473);
      case 46:
         jjmatchedKind = 32;
         return jjMoveStringLiteralDfa1_0(0x200000000000000L, 0x0L);
      case 58:
         jjmatchedKind = 39;
         return jjMoveStringLiteralDfa1_0(0x40000000000000L, 0x0L);
      case 59:
         return jjStopAtPos(0, 52);
      case 61:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200000000000L);
      case 65:
         return jjMoveStringLiteralDfa1_0(0x800000000000000L, 0x20000L);
      case 66:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x600L);
      case 67:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000200004000L);
      case 68:
         return jjMoveStringLiteralDfa1_0(0xf0000000000L, 0x0L);
      case 69:
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x2494000101L);
      case 70:
         return jjMoveStringLiteralDfa1_0(0x0L, 0xa000000L);
      case 73:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000000000L);
      case 77:
         return jjStartNfaWithStates_0(0, 87, 440);
      case 78:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000000080L);
      case 79:
         return jjMoveStringLiteralDfa1_0(0x4000000000000000L, 0x1000000000L);
      case 80:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80040000000L);
      case 81:
         return jjStartNfaWithStates_0(0, 86, 474);
      case 82:
         return jjMoveStringLiteralDfa1_0(0x0L, 0xc800000040L);
      case 83:
         return jjMoveStringLiteralDfa1_0(0x8000100000000000L, 0x20000000000L);
      case 84:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_0(0x8006008000000L, 0x10000000000L);
      case 86:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40012001b820L);
      case 87:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x100000000000L);
      case 91:
         return jjStopAtPos(0, 60);
      case 93:
         return jjStopAtPos(0, 61);
      case 95:
         return jjStartNfaWithStates_0(0, 31, 56);
      case 100:
         return jjStartNfaWithStates_0(0, 30, 474);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10L);
      case 104:
         return jjStartNfaWithStates_0(0, 33, 474);
      case 109:
         jjmatchedKind = 34;
         return jjMoveStringLiteralDfa1_0(0x1000000000L, 0x0L);
      case 115:
         return jjStartNfaWithStates_0(0, 35, 474);
      default :
         return jjMoveNfa_0(5, 0);
   }
}
static private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 35:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(1, 41);
         break;
      case 42:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(1, 5);
         break;
      case 46:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStopAtPos(1, 57);
         break;
      case 61:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(1, 54);
         break;
      case 62:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStopAtPos(1, 109);
         break;
      case 65:
         return jjMoveStringLiteralDfa2_0(active0, 0x50000000000L, active1, 0x241012001b820L);
      case 69:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0xc800000040L);
      case 70:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 62, 474);
         break;
      case 73:
         return jjMoveStringLiteralDfa2_0(active0, 0x2008000000L, active1, 0x120000000000L);
      case 78:
         if ((active1 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 100, 474);
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L, active1, 0x42494000101L);
      case 79:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000000L, active1, 0x800200004680L);
      case 82:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L, active1, 0x80040000000L);
      case 83:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000L, active1, 0L);
      case 84:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 43, 474);
         else if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(1, 81, 474);
         return jjMoveStringLiteralDfa2_0(active0, 0x8000100000000000L, active1, 0L);
      case 85:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0xa000000L);
      case 89:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000000L, active1, 0L);
      case 115:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 36, 474);
         break;
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
static private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0xc000000000L);
      case 68:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 38, 474);
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000000000L, active1, 0x2494000101L);
      case 73:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80000000000L);
      case 76:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000000000L);
      case 77:
         return jjMoveStringLiteralDfa3_0(active0, 0x2008000000L, active1, 0L);
      case 78:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2020a004080L);
      case 79:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x40000600L);
      case 80:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000L, active1, 0L);
      case 82:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x8800100000000000L, active1, 0x400120019820L);
      case 83:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10800000000L);
      case 84:
         if ((active1 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 111, 474);
         return jjMoveStringLiteralDfa3_0(active0, 0x250000000000L, active1, 0x140000000040L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
static private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0x40L);
      case 67:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0xa000000L);
      case 68:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0xc000000000L);
      case 69:
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 27;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 51, 474);
         return jjMoveStringLiteralDfa4_0(active0, 0x52000000000L, active1, 0x40000000000L);
      case 70:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000000L);
      case 71:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20040000000L);
      case 72:
         if ((active1 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 108, 474);
         break;
      case 73:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000L, active1, 0L);
      case 75:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 104, 474);
         break;
      case 76:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x600L);
      case 79:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80800000000L);
      case 82:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000L, active1, 0L);
      case 83:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 85:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000000L, active1, 0L);
      case 95:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000000000L, active1, 0x24025b40199a1L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
static private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 35:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(4, 40);
         break;
      case 65:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100000000L);
      case 67:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000000L, active1, 0x400400000000L);
      case 69:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x8000L);
      case 70:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x14000400L);
      case 71:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x10000L);
      case 73:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L, active1, 0x200001060L);
      case 74:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2000000000000L);
      case 76:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x20000000000L);
      case 78:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000L, active1, 0L);
      case 79:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x800L);
      case 80:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x80000000L);
      case 82:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0xc2040000280L);
      case 83:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1L);
      case 84:
         return jjMoveStringLiteralDfa5_0(active0, 0x20000000000000L, active1, 0x2a004000L);
      case 85:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x800000000L);
      case 86:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100L);
      case 89:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 59, 474);
         break;
      case 95:
         return jjMoveStringLiteralDfa5_0(active0, 0x42000000000L, active1, 0xc000000000L);
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
static private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa6_0(active0, 0x40000000000L, active1, 0x2000040004100L);
      case 67:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x100000000L);
      case 69:
         if ((active1 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 105, 474);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x2020000080L);
      case 71:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 44, 95);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x200000000L);
      case 73:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x8000a000000L);
      case 76:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x10000L);
      case 78:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(5, 70, 474);
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L, active1, 0x1020L);
      case 79:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000L, active1, 0x408400000000L);
      case 82:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x880000000L);
      case 84:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 63, 474);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1L);
      case 85:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x14000800L);
      case 86:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x40000000000L);
      case 87:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4000000000L);
      case 88:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x8000L);
      case 89:
         return jjMoveStringLiteralDfa6_0(active0, 0x20000000000000L, active1, 0L);
      case 95:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x600L);
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
static private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x40000000000L);
      case 67:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x900000000L);
      case 69:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x600L);
      case 70:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000L, active1, 0L);
      case 71:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 45, 269);
         break;
      case 77:
         if ((active1 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(6, 94, 474);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x20000000L);
      case 78:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000L, active1, 0x408414004000L);
      case 79:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x8a010000L);
      case 80:
         return jjMoveStringLiteralDfa7_0(active0, 0x20000000000000L, active1, 0x20L);
      case 82:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(6, 72, 474);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4000000001L);
      case 83:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x2000000000L);
      case 84:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x80000008880L);
      case 85:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x200000000L);
      case 86:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x2000000000000L);
      case 95:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x1000L);
      case 115:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
static private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
         if ((active1 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 113, 474);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x80L);
      case 66:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x10000L);
      case 67:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x14000000L);
      case 68:
         return jjMoveStringLiteralDfa8_0(active0, 0x40000000000L, active1, 0x600L);
      case 69:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 53, 474);
         else if ((active1 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(7, 99, 474);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x100008000L);
      case 70:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x400400000000L);
      case 71:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x80000000L);
      case 73:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x4000000000L);
      case 76:
         if ((active1 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 106, 474);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x8000000000L);
      case 78:
         if ((active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x8000000L);
      case 79:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x2000001000L);
      case 80:
         if ((active1 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(7, 93, 474);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x800L);
      case 82:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x200000000L);
      case 84:
         if ((active1 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(7, 78, 474);
         break;
      case 85:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x21L);
      case 89:
         if ((active1 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 107, 474);
         break;
      case 95:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
static private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x200010000L);
      case 67:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x1L);
      case 68:
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000000L, active1, 0L);
      case 71:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x600L);
      case 73:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x400400000080L);
      case 82:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x80008000L);
      case 83:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x100000000L);
      case 84:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(8, 69, 474);
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x4014000000L);
      case 85:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x2000001800L);
      case 89:
         if ((active1 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 103, 474);
         break;
      case 95:
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000000L, active1, 0x8000000L);
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
static private final int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa10_0(active0, 0x2000000000L, active1, 0x80000000L);
      case 66:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x8000000L);
      case 69:
         if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(9, 73, 474);
         else if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(9, 74, 474);
         else if ((active1 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 102, 474);
         break;
      case 71:
         if ((active1 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 110, 474);
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x400000000L);
      case 73:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x14000000L);
      case 76:
         if ((active1 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(9, 80, 474);
         break;
      case 78:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(9, 71, 474);
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x8000L);
      case 82:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x2000000000L);
      case 83:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(9, 96, 474);
         break;
      case 84:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(9, 64, 474);
         else if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(9, 75, 474);
         else if ((active1 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(9, 76, 474);
         return jjMoveStringLiteralDfa10_0(active0, 0x40000000000L, active1, 0x200000000L);
      case 110:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(9, 68, 474);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
static private final int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, active1);
      return 10;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x8000L);
      case 67:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x2000000000L);
      case 73:
         return jjMoveStringLiteralDfa11_0(active0, 0x40000000000L, active1, 0x200000000L);
      case 76:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x8000000L);
      case 77:
         if ((active1 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(10, 95, 474);
         break;
      case 79:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x14000000L);
      case 85:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x400000000L);
      case 89:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 37, 474);
         break;
      default :
         break;
   }
   return jjStartNfa_0(9, active0, active1);
}
static private final int jjMoveStringLiteralDfa11_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(9, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, active1);
      return 11;
   }
   switch(curChar)
   {
      case 69:
         if ((active1 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 101, 474);
         break;
      case 76:
         if ((active1 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(11, 79, 474);
         break;
      case 77:
         return jjMoveStringLiteralDfa12_0(active0, 0x40000000000L, active1, 0L);
      case 78:
         if ((active1 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 11;
         }
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x10000000L);
      case 79:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x208000000L);
      case 82:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, active1);
}
static private final int jjMoveStringLiteralDfa12_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(10, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, active1);
      return 12;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x400000000L);
      case 67:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x8000000L);
      case 69:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(12, 42, 474);
         break;
      case 78:
         if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(12, 97, 474);
         break;
      case 95:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x10000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, active1);
}
static private final int jjMoveStringLiteralDfa13_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(11, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, 0L, active1);
      return 13;
   }
   switch(curChar)
   {
      case 66:
         return jjMoveStringLiteralDfa14_0(active1, 0x10000000L);
      case 75:
         if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(13, 91, 474);
         break;
      case 84:
         return jjMoveStringLiteralDfa14_0(active1, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, 0L, active1);
}
static private final int jjMoveStringLiteralDfa14_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(12, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, 0L, active1);
      return 14;
   }
   switch(curChar)
   {
      case 73:
         return jjMoveStringLiteralDfa15_0(active1, 0x400000000L);
      case 76:
         return jjMoveStringLiteralDfa15_0(active1, 0x10000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, 0L, active1);
}
static private final int jjMoveStringLiteralDfa15_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(13, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, 0L, active1);
      return 15;
   }
   switch(curChar)
   {
      case 79:
         return jjMoveStringLiteralDfa16_0(active1, 0x410000000L);
      default :
         break;
   }
   return jjStartNfa_0(14, 0L, active1);
}
static private final int jjMoveStringLiteralDfa16_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(14, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, 0L, active1);
      return 16;
   }
   switch(curChar)
   {
      case 67:
         return jjMoveStringLiteralDfa17_0(active1, 0x10000000L);
      case 78:
         if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(16, 98, 474);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, 0L, active1);
}
static private final int jjMoveStringLiteralDfa17_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(15, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 75:
         if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(17, 92, 474);
         break;
      default :
         break;
   }
   return jjStartNfa_0(16, 0L, active1);
}
static private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
static private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
static private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0x0L, 0x40003000400030L
};
static private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 472;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 440:
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 476:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 473:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAddTwoStates(218, 217);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     jjCheckNAddTwoStates(75, 74);
                  }
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 474:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  if (curChar == 49)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 477:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  if (curChar == 49)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 35)
                     jjCheckNAddStates(3, 7);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     jjCheckNAddStates(8, 18);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAddStates(19, 21);
                  else if (curChar == 38)
                     jjAddStates(22, 24);
                  else if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 34)
                     jjCheckNAddStates(25, 28);
                  else if (curChar == 39)
                     jjCheckNAddStates(29, 32);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 38)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  if ((0x3000000000000L & l) != 0L)
                  {
                     if (kind > 20)
                        kind = 20;
                  }
                  else if (curChar == 56)
                     jjCheckNAddStates(33, 35);
                  else if (curChar == 50)
                     jjCheckNAddStates(36, 38);
                  if (curChar == 49)
                     jjCheckNAddStates(39, 41);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 478:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 475:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 0:
                  if ((0x3000000000000L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 6:
               case 12:
                  if (curChar == 39)
                     jjCheckNAddStates(29, 32);
                  break;
               case 7:
                  if ((0xffffff7f00000000L & l) != 0L)
                     jjCheckNAddStates(29, 32);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(29, 32);
                  break;
               case 10:
                  if (curChar == 39 && kind > 21)
                     kind = 21;
                  break;
               case 11:
                  if (curChar == 36)
                     jjAddStates(42, 53);
                  break;
               case 23:
                  if (curChar == 36)
                     jjCheckNAddStates(29, 32);
                  break;
               case 24:
               case 32:
                  if (curChar == 34)
                     jjCheckNAddStates(25, 28);
                  break;
               case 25:
                  if ((0xfffffffb00000000L & l) != 0L)
                     jjCheckNAddStates(25, 28);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(25, 28);
                  break;
               case 30:
                  if (curChar == 34 && kind > 22)
                     kind = 22;
                  break;
               case 31:
                  if (curChar == 36)
                     jjAddStates(54, 65);
                  break;
               case 43:
                  if (curChar == 36)
                     jjCheckNAddStates(25, 28);
                  break;
               case 44:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(66, 68);
                  break;
               case 49:
                  if (curChar == 46)
                     jjCheckNAdd(50);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(69, 71);
                  break;
               case 52:
                  if (curChar == 38 && kind > 117)
                     kind = 117;
                  break;
               case 73:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(74);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddTwoStates(75, 74);
                  break;
               case 76:
                  if (curChar == 35)
                     jjCheckNAdd(77);
                  break;
               case 77:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddTwoStates(78, 77);
                  break;
               case 79:
                  if (curChar == 50)
                     jjCheckNAdd(76);
                  break;
               case 80:
                  if (curChar == 35)
                     jjCheckNAdd(81);
                  break;
               case 81:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddTwoStates(82, 81);
                  break;
               case 83:
                  if (curChar == 56)
                     jjCheckNAdd(80);
                  break;
               case 84:
                  if (curChar == 35)
                     jjCheckNAdd(85);
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddTwoStates(86, 85);
                  break;
               case 87:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 88:
                  if (curChar == 49)
                     jjCheckNAdd(87);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(72, 74);
                  break;
               case 99:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
               case 106:
                  if (curChar == 39)
                     jjCheckNAddStates(75, 78);
                  break;
               case 101:
                  if ((0xffffff7f00000000L & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 104:
                  if (curChar == 39 && kind > 82)
                     kind = 82;
                  break;
               case 105:
                  if (curChar == 36)
                     jjAddStates(79, 90);
                  break;
               case 117:
                  if (curChar == 36)
                     jjCheckNAddStates(75, 78);
                  break;
               case 118:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 123:
                  if (curChar == 40 && kind > 116)
                     kind = 116;
                  break;
               case 128:
                  if (curChar == 49 && kind > 117)
                     kind = 117;
                  break;
               case 138:
                  if (curChar == 35)
                     jjCheckNAddStates(91, 94);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddTwoStates(140, 139);
                  break;
               case 141:
                  if (curChar == 35)
                     jjCheckNAdd(142);
                  break;
               case 142:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddTwoStates(143, 142);
                  break;
               case 144:
                  if (curChar == 50)
                     jjCheckNAdd(141);
                  break;
               case 145:
                  if (curChar == 35)
                     jjCheckNAdd(146);
                  break;
               case 146:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddTwoStates(147, 146);
                  break;
               case 148:
                  if (curChar == 56)
                     jjCheckNAdd(145);
                  break;
               case 149:
                  if (curChar == 35)
                     jjCheckNAdd(150);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddTwoStates(151, 150);
                  break;
               case 152:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 153:
                  if (curChar == 49)
                     jjCheckNAdd(152);
                  break;
               case 185:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 186:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(187);
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 189:
                  if (curChar == 46)
                     jjCheckNAdd(190);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  jjCheckNAddStates(95, 97);
                  break;
               case 193:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(194);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  jjCheckNAddStates(98, 100);
                  break;
               case 216:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddStates(19, 21);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddTwoStates(218, 217);
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(8, 18);
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 222:
                  if (curChar == 50)
                     jjCheckNAddStates(36, 38);
                  break;
               case 223:
                  if (curChar == 35)
                     jjCheckNAdd(224);
                  break;
               case 224:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(225, 224);
                  break;
               case 226:
                  if (curChar == 56)
                     jjCheckNAddStates(33, 35);
                  break;
               case 227:
                  if (curChar == 35)
                     jjCheckNAdd(228);
                  break;
               case 228:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddTwoStates(229, 228);
                  break;
               case 230:
                  if (curChar == 49)
                     jjCheckNAddStates(39, 41);
                  break;
               case 231:
                  if (curChar == 35)
                     jjCheckNAdd(232);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(233, 232);
                  break;
               case 234:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(101, 103);
                  break;
               case 273:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 274:
               case 282:
                  if (curChar == 34)
                     jjCheckNAddStates(104, 107);
                  break;
               case 275:
                  if ((0xfffffffb00000000L & l) != 0L)
                     jjCheckNAddStates(104, 107);
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(104, 107);
                  break;
               case 280:
                  if (curChar == 34 && kind > 83)
                     kind = 83;
                  break;
               case 281:
                  if (curChar == 36)
                     jjAddStates(108, 119);
                  break;
               case 293:
                  if (curChar == 36)
                     jjCheckNAddStates(104, 107);
                  break;
               case 294:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 321:
                  if (curChar == 38)
                     jjAddStates(22, 24);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 440:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 79)
                     jjCheckNAdd(213);
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 443;
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 441;
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 252:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 261;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 258;
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 255;
                  else if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 119:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 476:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 84)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  break;
               case 304:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 164:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 297:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 313:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 68)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  break;
               case 325:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 68)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 85)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 333;
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 331;
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 327;
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 132:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 78)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  if (curChar == 78)
                     jjCheckNAdd(91);
                  if (curChar == 78)
                     jjCheckNAdd(71);
                  break;
               case 305:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 307:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 324:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 330;
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 326;
                  if (curChar == 76)
                  {
                     if (kind > 112)
                        kind = 112;
                  }
                  break;
               case 474:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  break;
               case 424:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 82)
                     jjCheckNAdd(126);
                  if (curChar == 82)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 425;
                  if (curChar == 82)
                     jjCheckNAdd(123);
                  break;
               case 167:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 472:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 84)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 86)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  break;
               case 254:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 76)
                  {
                     if (kind > 49)
                        kind = 49;
                  }
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 90:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 129;
                  else if (curChar == 84)
                     jjCheckNAdd(126);
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 92;
                  if (curChar == 84)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 124;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 89;
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 95:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  else if (curChar == 91)
                     jjCheckNAdd(96);
                  break;
               case 303:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 89)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  break;
               case 477:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 76)
                  {
                     if (kind > 47)
                        kind = 47;
                  }
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 253:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  break;
               case 308:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 89:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 78)
                     jjCheckNAdd(91);
                  if (curChar == 78)
                     jjCheckNAdd(71);
                  break;
               case 242:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 245;
                  if (curChar == 67)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  break;
               case 237:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 247;
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 243;
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 240;
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 238;
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 296:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 255:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 257;
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 306:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 136:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 73)
                     jjCheckNAdd(58);
                  else if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 176;
                  else if (curChar == 84)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 171;
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 160;
                  else if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 155;
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 157;
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 316:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 81)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  if (curChar == 81)
                     jjCheckNAdd(123);
                  break;
               case 236:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 246;
                  else if (curChar == 65)
                     jjCheckNAdd(204);
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 242;
                  else if (curChar == 65)
                     jjCheckNAdd(184);
                  if (curChar == 84)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  break;
               case 94:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 71)
                  {
                     if (kind > 82)
                        kind = 82;
                     jjCheckNAddTwoStates(95, 118);
                  }
                  break;
               case 120:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 163:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 170:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 169;
                  if (curChar == 69)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  break;
               case 265:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 298;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 266;
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 309:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 326:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 329;
                  if (curChar == 67)
                  {
                     if (kind > 112)
                        kind = 112;
                  }
                  break;
               case 166:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 268:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 71)
                  {
                     if (kind > 83)
                        kind = 83;
                     jjCheckNAddTwoStates(269, 294);
                  }
                  break;
               case 302:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 313;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 311;
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 72:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  break;
               case 319:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 69)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 79)
                     jjCheckNAdd(59);
                  if (curChar == 69)
                     jjCheckNAdd(123);
                  break;
               case 311:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 169:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 56;
                  if ((0xc0000L & l) != 0L)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 85)
                     jjAddStates(120, 127);
                  else if (curChar == 71)
                     jjCheckNAddStates(128, 131);
                  else if (curChar == 77)
                     jjAddStates(132, 135);
                  else if (curChar == 88)
                     jjAddStates(136, 139);
                  else if (curChar == 79)
                     jjCheckNAddStates(140, 143);
                  else if (curChar == 65)
                     jjAddStates(144, 159);
                  else if (curChar == 67)
                     jjCheckNAddStates(160, 165);
                  else if (curChar == 78)
                     jjCheckNAddStates(166, 168);
                  else if (curChar == 69)
                     jjAddStates(169, 170);
                  else if (curChar == 84)
                     jjAddStates(171, 173);
                  else if (curChar == 87)
                     jjAddStates(174, 176);
                  else if (curChar == 66)
                     jjAddStates(177, 180);
                  else if (curChar == 76)
                     jjCheckNAddStates(181, 192);
                  else if (curChar == 68)
                     jjAddStates(193, 201);
                  else if (curChar == 73)
                     jjCheckNAddStates(202, 204);
                  else if (curChar == 74)
                     jjAddStates(205, 207);
                  else if (curChar == 80)
                     jjCheckNAddTwoStates(58, 59);
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 82)
                     jjCheckNAddStates(208, 213);
                  else if (curChar == 83)
                     jjCheckNAddStates(214, 221);
                  break;
               case 295:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 338:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 68)
                     jjCheckNAdd(213);
                  else if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 420;
                  if (curChar == 78)
                     jjCheckNAdd(213);
                  else if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 417;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 415;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 412;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 410;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 404;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 395;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 390;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 384;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 377;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 371;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 359;
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 347;
                  if (curChar == 78)
                     jjCheckNAdd(337);
                  break;
               case 168:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 162:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 77)
                     jjCheckNAdd(159);
                  break;
               case 298:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 121:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 78)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 269:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  else if (curChar == 91)
                     jjCheckNAdd(270);
                  break;
               case 160:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 170;
                  if (curChar == 84)
                     jjCheckNAdd(159);
                  break;
               case 165:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 478:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 69)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  break;
               case 475:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 84)
                  {
                     if (kind > 46)
                        kind = 46;
                  }
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 310:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(54, 53);
                  }
                  else if (curChar == 95)
                     jjCheckNAdd(53);
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 1:
                  if (curChar == 69 && kind > 20)
                     kind = 20;
                  break;
               case 2:
                  if (curChar == 83)
                     jjCheckNAdd(1);
                  break;
               case 3:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 7:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(29, 32);
                  break;
               case 8:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if ((0x7eL & l) != 0L)
                     jjCheckNAddStates(29, 32);
                  break;
               case 13:
                  if (curChar == 116)
                     jjCheckNAddStates(29, 32);
                  break;
               case 14:
                  if (curChar == 114)
                     jjCheckNAddStates(29, 32);
                  break;
               case 15:
                  if (curChar == 112)
                     jjCheckNAddStates(29, 32);
                  break;
               case 16:
                  if (curChar == 110)
                     jjCheckNAddStates(29, 32);
                  break;
               case 17:
                  if (curChar == 108)
                     jjCheckNAddStates(29, 32);
                  break;
               case 18:
                  if (curChar == 84)
                     jjCheckNAddStates(29, 32);
                  break;
               case 19:
                  if (curChar == 82)
                     jjCheckNAddStates(29, 32);
                  break;
               case 20:
                  if (curChar == 80)
                     jjCheckNAddStates(29, 32);
                  break;
               case 21:
                  if (curChar == 78)
                     jjCheckNAddStates(29, 32);
                  break;
               case 22:
                  if (curChar == 76)
                     jjCheckNAddStates(29, 32);
                  break;
               case 25:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(25, 28);
                  break;
               case 26:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 27:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 28:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x7eL & l) != 0L)
                     jjCheckNAddStates(25, 28);
                  break;
               case 33:
                  if (curChar == 116)
                     jjCheckNAddStates(25, 28);
                  break;
               case 34:
                  if (curChar == 114)
                     jjCheckNAddStates(25, 28);
                  break;
               case 35:
                  if (curChar == 112)
                     jjCheckNAddStates(25, 28);
                  break;
               case 36:
                  if (curChar == 110)
                     jjCheckNAddStates(25, 28);
                  break;
               case 37:
                  if (curChar == 108)
                     jjCheckNAddStates(25, 28);
                  break;
               case 38:
                  if (curChar == 84)
                     jjCheckNAddStates(25, 28);
                  break;
               case 39:
                  if (curChar == 82)
                     jjCheckNAddStates(25, 28);
                  break;
               case 40:
                  if (curChar == 80)
                     jjCheckNAddStates(25, 28);
                  break;
               case 41:
                  if (curChar == 78)
                     jjCheckNAddStates(25, 28);
                  break;
               case 42:
                  if (curChar == 76)
                     jjCheckNAddStates(25, 28);
                  break;
               case 45:
                  if ((0x22200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x1801014L & l) != 0L)
                     jjCheckNAdd(47);
                  break;
               case 48:
                  if (curChar == 95)
                     jjCheckNAdd(47);
                  break;
               case 51:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0xc0000L & l) != 0L && kind > 117)
                     kind = 117;
                  break;
               case 53:
               case 56:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(54, 53);
                  break;
               case 54:
                  if (curChar == 95)
                     jjCheckNAdd(53);
                  break;
               case 55:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if (curChar == 80)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 58:
                  if (curChar == 86 && kind > 117)
                     kind = 117;
                  break;
               case 59:
                  if (curChar == 84 && kind > 117)
                     kind = 117;
                  break;
               case 60:
                  if (curChar == 74)
                     jjAddStates(205, 207);
                  break;
               case 61:
                  if (curChar == 80 && kind > 115)
                     kind = 115;
                  break;
               case 62:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 67 && kind > 115)
                     kind = 115;
                  break;
               case 64:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 78 && kind > 115)
                     kind = 115;
                  break;
               case 67:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 83)
                     jjCheckNAddStates(214, 221);
                  break;
               case 71:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 75:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 78:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 82:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 85:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddTwoStates(86, 85);
                  break;
               case 86:
                  if (curChar == 95)
                     jjCheckNAdd(85);
                  break;
               case 91:
                  if (curChar == 84 && kind > 46)
                     kind = 46;
                  break;
               case 92:
               case 157:
               case 202:
               case 461:
               case 464:
               case 466:
               case 469:
                  if (curChar == 78)
                     jjCheckNAdd(91);
                  break;
               case 93:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 97:
                  if (curChar == 95)
                     jjCheckNAdd(96);
                  break;
               case 98:
                  if (curChar != 93)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAdd(118);
                  break;
               case 101:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 102:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0x7eL & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 107:
                  if (curChar == 116)
                     jjCheckNAddStates(75, 78);
                  break;
               case 108:
                  if (curChar == 114)
                     jjCheckNAddStates(75, 78);
                  break;
               case 109:
                  if (curChar == 112)
                     jjCheckNAddStates(75, 78);
                  break;
               case 110:
                  if (curChar == 110)
                     jjCheckNAddStates(75, 78);
                  break;
               case 111:
                  if (curChar == 108)
                     jjCheckNAddStates(75, 78);
                  break;
               case 112:
                  if (curChar == 84)
                     jjCheckNAddStates(75, 78);
                  break;
               case 113:
                  if (curChar == 82)
                     jjCheckNAddStates(75, 78);
                  break;
               case 114:
                  if (curChar == 80)
                     jjCheckNAddStates(75, 78);
                  break;
               case 115:
                  if (curChar == 78)
                     jjCheckNAddStates(75, 78);
                  break;
               case 116:
                  if (curChar == 76)
                     jjCheckNAddStates(75, 78);
                  break;
               case 122:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 124:
                  if (curChar == 66)
                     jjCheckNAdd(123);
                  break;
               case 125:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 78 && kind > 117)
                     kind = 117;
                  break;
               case 127:
                  if (curChar == 84)
                     jjCheckNAdd(126);
                  break;
               case 129:
                  if (curChar == 66 && kind > 117)
                     kind = 117;
                  break;
               case 130:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 73)
                     jjCheckNAddStates(202, 204);
                  break;
               case 133:
                  if (curChar == 78)
                     jjCheckNAdd(91);
                  break;
               case 134:
                  if (curChar == 68)
                     jjAddStates(193, 201);
                  break;
               case 135:
               case 182:
               case 450:
               case 453:
               case 455:
               case 458:
                  if (curChar == 78)
                     jjCheckNAdd(71);
                  break;
               case 137:
                  if (curChar == 68)
                     jjCheckNAdd(138);
                  break;
               case 140:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 143:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 147:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 150:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAddTwoStates(151, 150);
                  break;
               case 151:
                  if (curChar == 95)
                     jjCheckNAdd(150);
                  break;
               case 154:
               case 199:
               case 264:
                  if (curChar == 82)
                     jjCheckNAdd(137);
                  break;
               case 155:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 158:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 69 && kind > 48)
                     kind = 48;
                  break;
               case 161:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 171:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 84 && kind > 48)
                     kind = 48;
                  break;
               case 174:
                  if (curChar == 68 && kind > 49)
                     kind = 49;
                  break;
               case 175:
               case 208:
               case 266:
                  if (curChar == 82)
                     jjCheckNAdd(174);
                  break;
               case 176:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 86)
                     jjCheckNAdd(123);
                  break;
               case 179:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 73)
                     jjCheckNAdd(58);
                  break;
               case 181:
                  if (curChar == 76)
                     jjCheckNAddStates(181, 192);
                  break;
               case 183:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 188:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 191:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAddTwoStates(193, 194);
                  break;
               case 195:
                  if (curChar == 95)
                     jjCheckNAdd(194);
                  break;
               case 196:
                  if (curChar == 65)
                     jjCheckNAdd(184);
                  break;
               case 197:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 203:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 76 && kind > 47)
                     kind = 47;
                  break;
               case 205:
                  if (curChar == 65)
                     jjCheckNAdd(204);
                  break;
               case 206:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 209:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
               case 447:
                  if (curChar == 84)
                     jjCheckNAdd(123);
                  break;
               case 212:
               case 448:
                  if (curChar == 69)
                     jjCheckNAdd(123);
                  break;
               case 213:
                  if (curChar == 68 && kind > 117)
                     kind = 117;
                  break;
               case 214:
               case 420:
                  if (curChar == 68)
                     jjCheckNAdd(126);
                  break;
               case 215:
                  if (curChar == 69 && kind > 117)
                     kind = 117;
                  break;
               case 218:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 220:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 225:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 229:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 232:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(233, 232);
                  break;
               case 233:
                  if (curChar == 95)
                     jjCheckNAdd(232);
                  break;
               case 235:
                  if (curChar == 82)
                     jjCheckNAddStates(208, 213);
                  break;
               case 238:
                  if (curChar == 65)
                     jjCheckNAdd(204);
                  break;
               case 239:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 84 && kind > 114)
                     kind = 114;
                  break;
               case 241:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 243:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 78 && kind > 114)
                     kind = 114;
                  break;
               case 246:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 66)
                     jjAddStates(177, 180);
                  break;
               case 250:
                  if (curChar == 69)
                     jjCheckNAdd(138);
                  break;
               case 251:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 256:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 76 && kind > 49)
                     kind = 49;
                  break;
               case 258:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 69 && kind > 49)
                     kind = 49;
                  break;
               case 261:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if (curChar == 87)
                     jjAddStates(174, 176);
                  break;
               case 267:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 271:
                  if (curChar == 95)
                     jjCheckNAdd(270);
                  break;
               case 272:
                  if (curChar != 93)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(294);
                  break;
               case 275:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(104, 107);
                  break;
               case 276:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 278:
                  if ((0x7eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
                  if ((0x7eL & l) != 0L)
                     jjCheckNAddStates(104, 107);
                  break;
               case 283:
                  if (curChar == 116)
                     jjCheckNAddStates(104, 107);
                  break;
               case 284:
                  if (curChar == 114)
                     jjCheckNAddStates(104, 107);
                  break;
               case 285:
                  if (curChar == 112)
                     jjCheckNAddStates(104, 107);
                  break;
               case 286:
                  if (curChar == 110)
                     jjCheckNAddStates(104, 107);
                  break;
               case 287:
                  if (curChar == 108)
                     jjCheckNAddStates(104, 107);
                  break;
               case 288:
                  if (curChar == 84)
                     jjCheckNAddStates(104, 107);
                  break;
               case 289:
                  if (curChar == 82)
                     jjCheckNAddStates(104, 107);
                  break;
               case 290:
                  if (curChar == 80)
                     jjCheckNAddStates(104, 107);
                  break;
               case 291:
                  if (curChar == 78)
                     jjCheckNAddStates(104, 107);
                  break;
               case 292:
                  if (curChar == 76)
                     jjCheckNAddStates(104, 107);
                  break;
               case 299:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 84)
                     jjAddStates(171, 173);
                  break;
               case 301:
                  if (curChar == 85)
                     jjCheckNAdd(1);
                  break;
               case 312:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 314:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 69)
                     jjAddStates(169, 170);
                  break;
               case 317:
                  if (curChar == 81 && kind > 117)
                     kind = 117;
                  break;
               case 318:
                  if (curChar == 78)
                     jjCheckNAddStates(166, 168);
                  break;
               case 320:
                  if (curChar == 79)
                     jjCheckNAdd(59);
                  break;
               case 322:
               case 414:
               case 425:
               case 432:
                  if (curChar == 78)
                     jjCheckNAdd(123);
                  break;
               case 323:
                  if (curChar == 67)
                     jjCheckNAddStates(160, 165);
                  break;
               case 327:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (curChar == 78 && kind > 112)
                     kind = 112;
                  break;
               case 330:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 75 && kind > 117)
                     kind = 117;
                  break;
               case 334:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 85 && kind > 117)
                     kind = 117;
                  break;
               case 336:
                  if (curChar == 65)
                     jjAddStates(144, 159);
                  break;
               case 337:
                  if (curChar == 89 && kind > 50)
                     kind = 50;
                  break;
               case 339:
                  if (curChar == 68 && kind > 50)
                     kind = 50;
                  break;
               case 340:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 86)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (curChar == 82)
                     jjCheckNAdd(337);
                  break;
               case 350:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 69 && kind > 50)
                     kind = 50;
                  break;
               case 362:
                  if (curChar == 68)
                     jjCheckNAdd(361);
                  break;
               case 363:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 77 && kind > 50)
                     kind = 50;
                  break;
               case 374:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 76 && kind > 50)
                     kind = 50;
                  break;
               case 380:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 84 && kind > 50)
                     kind = 50;
                  break;
               case 387:
                  if (curChar == 78)
                     jjCheckNAdd(386);
                  break;
               case 388:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 73)
                     jjCheckNAdd(386);
                  break;
               case 393:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 71 && kind > 50)
                     kind = 50;
                  break;
               case 398:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if (curChar == 84)
                     jjCheckNAdd(361);
                  break;
               case 407:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 408:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 89)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
               case 417:
               case 441:
                  if (curChar == 68)
                     jjCheckNAdd(123);
                  break;
               case 413:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 415:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 418:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 419:
                  if (curChar == 78)
                     jjCheckNAdd(213);
                  break;
               case 421:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if (curChar == 68)
                     jjCheckNAdd(213);
                  break;
               case 423:
                  if (curChar == 79)
                     jjCheckNAddStates(140, 143);
                  break;
               case 426:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if (curChar == 82 && kind > 117)
                     kind = 117;
                  break;
               case 428:
               case 436:
                  if (curChar == 82)
                     jjCheckNAdd(126);
                  break;
               case 429:
                  if (curChar == 88)
                     jjAddStates(136, 139);
                  break;
               case 430:
                  if (curChar == 82)
                     jjCheckNAdd(123);
                  break;
               case 431:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 433:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if (curChar == 79)
                     jjCheckNAdd(427);
                  break;
               case 437:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if (curChar == 77)
                     jjAddStates(132, 135);
                  break;
               case 439:
                  if (curChar == 76)
                     jjCheckNAdd(123);
                  break;
               case 442:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if (curChar == 76 && kind > 117)
                     kind = 117;
                  break;
               case 444:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 79)
                     jjCheckNAdd(213);
                  break;
               case 446:
                  if (curChar == 71)
                     jjCheckNAddStates(128, 131);
                  break;
               case 449:
                  if (curChar == 85)
                     jjAddStates(120, 127);
                  break;
               case 451:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 454:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 456:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 459:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 462:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 465:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 467:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 470:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(29, 32);
                  break;
               case 25:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(25, 28);
                  break;
               case 101:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(75, 78);
                  break;
               case 275:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(104, 107);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 472 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x40L);
      default :
         return 1;
   }
}
static private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(1, 6);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   188, 187, 189, 73, 74, 79, 83, 88, 75, 74, 218, 217, 220, 221, 188, 187, 
   189, 140, 139, 74, 217, 187, 123, 322, 126, 25, 26, 30, 31, 7, 8, 10, 
   11, 80, 227, 145, 76, 223, 141, 87, 234, 152, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
   42, 43, 48, 47, 49, 49, 51, 50, 97, 96, 98, 101, 102, 104, 105, 106, 
   107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 139, 144, 148, 153, 191, 
   190, 192, 192, 195, 194, 271, 270, 272, 275, 276, 280, 281, 282, 283, 284, 285, 
   286, 287, 288, 289, 290, 291, 292, 293, 452, 454, 457, 460, 463, 465, 468, 471, 
   447, 448, 59, 215, 440, 442, 444, 445, 431, 434, 435, 437, 424, 426, 427, 428, 
   338, 348, 360, 372, 378, 385, 391, 396, 405, 411, 413, 416, 418, 419, 421, 422, 
   325, 328, 332, 334, 335, 213, 319, 320, 215, 316, 317, 302, 312, 314, 265, 267, 
   299, 252, 256, 259, 262, 183, 198, 201, 203, 207, 210, 211, 212, 213, 214, 59, 
   215, 136, 156, 158, 161, 172, 173, 177, 179, 180, 132, 133, 126, 62, 65, 69, 
   237, 239, 241, 244, 248, 128, 90, 93, 122, 125, 59, 127, 128, 130, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\124", "\124\111\115\105", "\43", "\55", "\144", "\137", "\56", "\150", "\155", 
"\163", "\155\163", "\124\111\115\105\137\117\106\137\104\101\131", "\124\117\104", 
"\72", "\104\101\124\105\43", "\104\43", 
"\104\101\124\105\137\101\116\104\137\124\111\115\105", "\104\124", "\123\124\122\111\116\107", "\127\123\124\122\111\116\107", null, 
null, null, null, null, "\124\131\120\105", "\73", 
"\105\116\104\137\124\131\120\105", "\72\75", "\50", "\51", "\56\56", "\54", "\101\122\122\101\131", "\133", 
"\135", "\117\106", "\123\124\122\125\103\124", 
"\105\116\104\137\123\124\122\125\103\124", null, null, null, "\145\170\160\162\145\163\163\151\157\156", 
"\126\101\122\137\111\116\120\125\124", "\122\105\124\101\111\116", "\116\117\116\137\122\105\124\101\111\116", 
"\105\116\104\137\126\101\122", "\102\117\117\114\122\137\105\104\107\105", 
"\102\117\117\114\106\137\105\104\107\105", "\126\101\122\137\117\125\124\120\125\124", 
"\126\101\122\137\111\116\137\117\125\124", "\126\101\122", "\103\117\116\123\124\101\116\124", 
"\126\101\122\137\105\130\124\105\122\116\101\114", "\126\101\122\137\107\114\117\102\101\114", "\101\124", null, null, "\45", 
"\111", "\121", "\115", "\52", "\106\125\116\103\124\111\117\116", 
"\105\116\104\137\106\125\116\103\124\111\117\116", "\106\125\116\103\124\111\117\116\137\102\114\117\103\113", 
"\105\116\104\137\106\125\116\103\124\111\117\116\137\102\114\117\103\113", "\126\101\122\137\124\105\115\120", "\120\122\117\107\122\101\115", 
"\105\116\104\137\120\122\117\107\122\101\115", "\126\101\122\137\101\103\103\105\123\123", 
"\103\117\116\106\111\107\125\122\101\124\111\117\116", "\105\116\104\137\103\117\116\106\111\107\125\122\101\124\111\117\116", 
"\122\105\123\117\125\122\103\105", "\117\116", "\105\116\104\137\122\105\123\117\125\122\103\105", 
"\122\105\101\104\137\127\122\111\124\105", "\122\105\101\104\137\117\116\114\131", "\124\101\123\113", 
"\123\111\116\107\114\105", "\111\116\124\105\122\126\101\114", "\120\122\111\117\122\111\124\131", 
"\127\111\124\110", "\75\76", "\126\101\122\137\103\117\116\106\111\107", "\116\117\124", null, 
"\103\101\114\137\112\101\126\101", null, null, null, null, null, null, null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "WithinComment", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffc7aaf01L, 0x7ffffffffffff3L, 
};
static final long[] jjtoSkip = {
   0x7eL, 0x0L, 
};
static final long[] jjtoMore = {
   0x80L, 0x0L, 
};
static private SimpleCharStream input_stream;
static private final int[] jjrounds = new int[472];
static private final int[] jjstateSet = new int[944];
static protected char curChar;
public parserTokenManager(SimpleCharStream stream)
{
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}
public parserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 472; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
static public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static private final Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

public static final Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 7)
         {
            jjmatchedKind = 7;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

}
