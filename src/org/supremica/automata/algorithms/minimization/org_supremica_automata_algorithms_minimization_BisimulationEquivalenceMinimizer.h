/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer */

#ifndef _Included_org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer
#define _Included_org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer
 * Method:    initialize
 * Signature: (III[I[I)V
 */
JNIEXPORT void JNICALL Java_org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer_initialize
  (JNIEnv *, jclass, jint, jint, jint, jintArray, jintArray);

/*
 * Class:     org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer
 * Method:    partition
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer_partition
  (JNIEnv *, jclass);

/*
 * Class:     org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer
 * Method:    getPartitioning
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_org_supremica_automata_algorithms_minimization_BisimulationEquivalenceMinimizer_getPartitioning
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
