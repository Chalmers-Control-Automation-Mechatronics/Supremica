//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################
//# Copyright (C) 2004-2023 Robi Malik
//###########################################################################
//# This file is part of Waters.
//# Waters is free software: you can redistribute it and/or modify it under
//# the terms of the GNU General Public License as published by the Free
//# Software Foundation, either version 2 of the License, or (at your option)
//# any later version.
//# Waters is distributed in the hope that it will be useful, but WITHOUT ANY
//# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
//# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
//# details.
//# You should have received a copy of the GNU General Public License along
//# with Waters. If not, see <http://www.gnu.org/licenses/>.
//#
//# Linking Waters statically or dynamically with other modules is making a
//# combined work based on Waters. Thus, the terms and conditions of the GNU
//# General Public License cover the whole combination.
//# In addition, as a special exception, the copyright holders of Waters give
//# you permission to combine Waters with code included in the standard
//# release of Supremica under the Supremica Software License Agreement (or
//# modified versions of such code, with unchanged license). You may copy and
//# distribute such a system following the terms of the GNU GPL for Waters and
//# the licenses of the other code concerned.
//# Note that people who make modified versions of Waters are not obligated to
//# grant this special exception for their modified versions; it is their
//# choice whether to do so. The GNU General Public License gives permission
//# to release a modified version without this exception; this exception also
//# makes it possible to release a modified version which carries forward this
//# exception.
//###########################################################################

package net.sourceforge.waters.model.module;

import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;


/**
 * The visitor interface for the module class hierarchy.
 *
 * @author Robi Malik
 */

public interface ModuleProxyVisitor
  extends ProxyVisitor
{

  //#########################################################################
  //# Visitor Methods
  public Object visitAliasProxy(AliasProxy proxy)
    throws VisitorException;

  public Object visitBinaryExpressionProxy(BinaryExpressionProxy proxy)
    throws VisitorException;

  public Object visitBoxGeometryProxy(BoxGeometryProxy proxy)
    throws VisitorException;

  public Object visitColorGeometryProxy(ColorGeometryProxy proxy)
    throws VisitorException;

  public Object visitComponentProxy(ComponentProxy proxy)
    throws VisitorException;

  public Object visitConditionalProxy(ConditionalProxy proxy)
    throws VisitorException;

  public Object visitConstantAliasProxy(ConstantAliasProxy proxy)
    throws VisitorException;

  public Object visitEdgeProxy(EdgeProxy proxy)
    throws VisitorException;

  public Object visitEnumSetExpressionProxy(EnumSetExpressionProxy proxy)
    throws VisitorException;

  public Object visitEventAliasProxy(EventAliasProxy proxy)
    throws VisitorException;

  public Object visitEventDeclProxy(EventDeclProxy proxy)
    throws VisitorException;

  public Object visitEventListExpressionProxy(EventListExpressionProxy proxy)
    throws VisitorException;

  public Object visitExpressionProxy(ExpressionProxy proxy)
    throws VisitorException;

  public Object visitForeachProxy(ForeachProxy proxy)
    throws VisitorException;

  public Object visitFunctionCallExpressionProxy(FunctionCallExpressionProxy proxy)
    throws VisitorException;

  public Object visitGraphProxy(GraphProxy proxy)
    throws VisitorException;

  public Object visitGroupNodeProxy(GroupNodeProxy proxy)
    throws VisitorException;

  public Object visitGuardActionBlockProxy(GuardActionBlockProxy proxy)
    throws VisitorException;

  public Object visitIdentifiedProxy(IdentifiedProxy proxy)
    throws VisitorException;

  public Object visitIdentifierProxy(IdentifierProxy proxy)
    throws VisitorException;

  public Object visitIndexedIdentifierProxy(IndexedIdentifierProxy proxy)
    throws VisitorException;

  public Object visitInstanceProxy(InstanceProxy proxy)
    throws VisitorException;

  public Object visitIntConstantProxy(IntConstantProxy proxy)
    throws VisitorException;

  public Object visitLabelBlockProxy(LabelBlockProxy proxy)
    throws VisitorException;

  public Object visitLabelGeometryProxy(LabelGeometryProxy proxy)
    throws VisitorException;

  public Object visitModuleProxy(ModuleProxy proxy)
    throws VisitorException;

  public Object visitModuleSequenceProxy(ModuleSequenceProxy proxy)
    throws VisitorException;

  public Object visitNestedBlockProxy(NestedBlockProxy proxy)
    throws VisitorException;

  public Object visitNodeProxy(NodeProxy proxy)
    throws VisitorException;

  public Object visitParameterBindingProxy(ParameterBindingProxy proxy)
    throws VisitorException;

  public Object visitPlainEventListProxy(PlainEventListProxy proxy)
    throws VisitorException;

  public Object visitPointGeometryProxy(PointGeometryProxy proxy)
    throws VisitorException;

  public Object visitQualifiedIdentifierProxy(QualifiedIdentifierProxy proxy)
    throws VisitorException;

  public Object visitSimpleComponentProxy(SimpleComponentProxy proxy)
    throws VisitorException;

  public Object visitSimpleExpressionProxy(SimpleExpressionProxy proxy)
    throws VisitorException;

  public Object visitSimpleIdentifierProxy(SimpleIdentifierProxy proxy)
    throws VisitorException;

  public Object visitSimpleNodeProxy(SimpleNodeProxy proxy)
    throws VisitorException;

  public Object visitSplineGeometryProxy(SplineGeometryProxy proxy)
    throws VisitorException;

  public Object visitUnaryExpressionProxy(UnaryExpressionProxy proxy)
    throws VisitorException;

  public Object visitVariableComponentProxy(VariableComponentProxy proxy)
    throws VisitorException;

  public Object visitVariableMarkingProxy(VariableMarkingProxy proxy)
    throws VisitorException;

}
