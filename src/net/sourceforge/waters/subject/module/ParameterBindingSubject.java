//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.subject.module
//# CLASS:   ParameterBindingSubject
//###########################################################################
//# $Id: ParameterBindingSubject.java,v 1.7 2007-03-02 05:21:14 robi Exp $
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.subject.module;

import net.sourceforge.waters.model.base.Proxy;
import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.ExpressionProxy;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.model.module.ParameterBindingProxy;
import net.sourceforge.waters.subject.base.NamedSubject;
import net.sourceforge.waters.subject.base.ProxySubject;


/**
 * The subject implementation of the {@link ParameterBindingProxy} interface.
 *
 * @author Robi Malik
 */

public final class ParameterBindingSubject
  extends NamedSubject
  implements ParameterBindingProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new parameter binding.
   * @param name The name of the new parameter binding.
   * @param expression The expression of the new parameter binding.
   */
  public ParameterBindingSubject(final String name,
                                 final ExpressionProxy expression)
  {
    super(name);
    mExpression = (ExpressionSubject) expression;
    mExpression.setParent(this);
  }


  //#########################################################################
  //# Cloning and Assigning
  public ParameterBindingSubject clone()
  {
    final ParameterBindingSubject cloned = (ParameterBindingSubject) super.clone();
    cloned.mExpression = mExpression.clone();
    cloned.mExpression.setParent(cloned);
    return cloned;
  }

  public boolean assignFrom(final ProxySubject partner)
  {
    if (this != partner) {
      final ParameterBindingSubject downcast = (ParameterBindingSubject) partner;
      boolean change = super.assignFrom(partner);
      final ExpressionSubject expression = downcast.getExpression();
      mExpression.assignFrom(expression);
      if (change) {
        fireStateChanged();
      }
    }
    return false;
  }


  //#########################################################################
  //# Equality and Hashcode
  public boolean equalsByContents(final Proxy partner)
  {
    if (super.equalsByContents(partner)) {
      final ParameterBindingSubject downcast = (ParameterBindingSubject) partner;
      return
        mExpression.equalsByContents(downcast.mExpression);
    } else {
      return false;
    }
  }

  public int hashCodeByContents()
  {
    int result = super.hashCodeByContents();
    result *= 5;
    result += mExpression.hashCodeByContents();
    return result;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitParameterBindingProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.ParameterBindingProxy
  public ExpressionSubject getExpression()
  {
    return mExpression;
  }


  //#########################################################################
  //# Setters
  public void setExpression(final ExpressionSubject expression)
  {
    if (mExpression == expression) {
      return;
    }
    expression.setParent(this);
    mExpression.setParent(null);
    mExpression = expression;
    fireStateChanged();
  }


  //#########################################################################
  //# Data Members
  private ExpressionSubject mExpression;

}
