//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.subject.module
//# CLASS:   EventAliasSubject
//###########################################################################
//# $Id: EventAliasSubject.java,v 1.1 2007-06-08 10:45:20 robi Exp $
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.subject.module;

import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.EventAliasProxy;
import net.sourceforge.waters.model.module.ExpressionProxy;
import net.sourceforge.waters.model.module.IdentifierProxy;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.subject.base.ProxySubject;


/**
 * The subject implementation of the {@link EventAliasProxy} interface.
 *
 * @author Robi Malik
 */

public final class EventAliasSubject
  extends AliasSubject
  implements EventAliasProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new event alias.
   * @param identifier The identifier defining the name of the new event alias.
   * @param expression The expression of the new event alias.
   */
  public EventAliasSubject(final IdentifierProxy identifier,
                           final ExpressionProxy expression)
  {
    super(identifier, expression);
  }


  //#########################################################################
  //# Cloning and Assigning
  public EventAliasSubject clone()
  {
    return (EventAliasSubject) super.clone();
  }

  public boolean assignFrom(final ProxySubject partner)
  {
    if (this != partner) {
      boolean change = super.assignFrom(partner);
      if (change) {
        fireStateChanged();
      }
    }
    return false;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitEventAliasProxy(this);
  }

}
