//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.subject.module
//# CLASS:   LabelBlockSubject
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.subject.module;

import java.util.Collection;

import net.sourceforge.waters.model.base.Proxy;
import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.LabelBlockProxy;
import net.sourceforge.waters.model.module.LabelGeometryProxy;
import net.sourceforge.waters.model.module.ModuleProxyCloner;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.subject.base.ProxySubject;


/**
 * The subject implementation of the {@link LabelBlockProxy} interface.
 *
 * @author Robi Malik
 */

public final class LabelBlockSubject
  extends EventListExpressionSubject
  implements LabelBlockProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new label block.
   * @param eventList The list of events of the new label block, or <CODE>null</CODE> if empty.
   * @param geometry The geometry of the new label block, or <CODE>null</CODE>.
   */
  public LabelBlockSubject(final Collection<? extends Proxy> eventList,
                           final LabelGeometryProxy geometry)
  {
    super(eventList);
    mGeometry = (LabelGeometrySubject) geometry;
    if (mGeometry != null) {
      mGeometry.setParent(this);
    }
  }

  /**
   * Creates a new label block using default values.
   * This constructor creates a label block with
   * an empty list of events and
   * the geometry set to <CODE>null</CODE>.
   */
  public LabelBlockSubject()
  {
    this(null,
         null);
  }


  //#########################################################################
  //# Cloning and Assigning
  public LabelBlockSubject clone()
  {
    final ModuleProxyCloner cloner =
      ModuleSubjectFactory.getCloningInstance();
    return (LabelBlockSubject) cloner.getClone(this);
  }

  public boolean assignFrom(final ProxySubject partner)
  {
    if (this != partner) {
      final LabelBlockSubject downcast = (LabelBlockSubject) partner;
      boolean change = super.assignFrom(partner);
      final LabelGeometrySubject geometry = downcast.getGeometry();
      if (mGeometry == geometry) {
        // nothing
      } else if (mGeometry == null) {
        mGeometry = geometry.clone();
        mGeometry.setParent(this);
        fireGeometryChanged(mGeometry);
      } else if (geometry == null) {
        mGeometry.setParent(null);
        mGeometry = null;
        fireGeometryChanged(null);
      } else {
        mGeometry.assignFrom(geometry);
      }
      if (change) {
        fireStateChanged();
      }
    }
    return false;
  }


  //#########################################################################
  //# Comparing
  public Class<LabelBlockProxy> getProxyInterface()
  {
    return LabelBlockProxy.class;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitLabelBlockProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.LabelBlockProxy
  public LabelGeometrySubject getGeometry()
  {
    return mGeometry;
  }


  //#########################################################################
  //# Setters
  public void setGeometry(final LabelGeometrySubject geometry)
  {
    if (mGeometry == geometry) {
      return;
    }
    if (geometry != null) {
      geometry.setParent(this);
    }
    if (mGeometry != null) {
      mGeometry.setParent(null);
    }
    mGeometry = geometry;
    fireGeometryChanged(mGeometry);
  }


  //#########################################################################
  //# Data Members
  private LabelGeometrySubject mGeometry;

}
