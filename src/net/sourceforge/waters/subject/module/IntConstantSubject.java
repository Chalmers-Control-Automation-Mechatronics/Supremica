//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.subject.module
//# CLASS:   IntConstantSubject
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.subject.module;

import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.IntConstantProxy;
import net.sourceforge.waters.model.module.ModuleProxyCloner;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.subject.base.ProxySubject;


/**
 * The subject implementation of the {@link IntConstantProxy} interface.
 *
 * @author Robi Malik
 */

public final class IntConstantSubject
  extends SimpleExpressionSubject
  implements IntConstantProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new integer constant.
   * @param plainText The original text of the new integer constant, or <CODE>null</CODE>.
   * @param value The integer value of the new integer constant.
   */
  public IntConstantSubject(final String plainText,
                            final int value)
  {
    super(plainText);
    mValue = value;
  }

  /**
   * Creates a new integer constant using default values.
   * This constructor creates an integer constant with
   * the original text set to <CODE>null</CODE>.
   * @param value The integer value of the new integer constant.
   */
  public IntConstantSubject(final int value)
  {
    this(null,
         value);
  }


  //#########################################################################
  //# Cloning and Assigning
  public IntConstantSubject clone()
  {
    final ModuleProxyCloner cloner =
      ModuleSubjectFactory.getCloningInstance();
    return (IntConstantSubject) cloner.getClone(this);
  }

  public boolean assignFrom(final ProxySubject partner)
  {
    if (this != partner) {
      final IntConstantSubject downcast = (IntConstantSubject) partner;
      boolean change = super.assignFrom(partner);
      final int value = downcast.getValue();
      if (mValue != value) {
        mValue = value;
        change = true;
      }
      if (change) {
        fireStateChanged();
      }
    }
    return false;
  }


  //#########################################################################
  //# Comparing
  public Class<IntConstantProxy> getProxyInterface()
  {
    return IntConstantProxy.class;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitIntConstantProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.IntConstantProxy
  public int getValue()
  {
    return mValue;
  }


  //#########################################################################
  //# Setters
  /**
   * Sets the integer value of this constant.
   */
  public void setValue(final int value)
  {
    if (mValue == value) {
      return;
    }
    mValue = value;
    fireStateChanged();
  }


  //#########################################################################
  //# Data Members
  private int mValue;

}
