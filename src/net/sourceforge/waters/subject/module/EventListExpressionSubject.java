//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.subject.module
//# CLASS:   EventListExpressionSubject
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.subject.module;

import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Set;

import net.sourceforge.waters.model.base.Proxy;
import net.sourceforge.waters.model.module.EventListExpressionProxy;
import net.sourceforge.waters.model.module.ModuleProxyCloner;
import net.sourceforge.waters.subject.base.AbstractSubject;
import net.sourceforge.waters.subject.base.ArrayListSubject;
import net.sourceforge.waters.subject.base.ListSubject;
import net.sourceforge.waters.subject.base.ProxySubject;
import net.sourceforge.waters.subject.base.RecursiveUndoInfo;
import net.sourceforge.waters.subject.base.Subject;
import net.sourceforge.waters.subject.base.UndoInfo;


/**
 * The subject implementation of the {@link EventListExpressionProxy} interface.
 *
 * @author Robi Malik
 */

public abstract class EventListExpressionSubject
  extends ExpressionSubject
  implements EventListExpressionProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new event list expression.
   * @param eventIdentifierList The list of event identifiers of the new event list expression, or <CODE>null</CODE> if empty.
   *        Each element is of type {@link net.sourceforge.waters.model.module.IdentifierProxy IdentifierProxy} or {@link net.sourceforge.waters.model.module.ForeachProxy ForeachProxy}.
   */
  protected EventListExpressionSubject(final Collection<? extends Proxy> eventIdentifierList)
  {
    if (eventIdentifierList == null) {
      mEventIdentifierList = new ArrayListSubject<AbstractSubject>();
    } else {
      mEventIdentifierList = new ArrayListSubject<AbstractSubject>
        (eventIdentifierList, AbstractSubject.class);
    }
    mEventIdentifierList.setParent(this);
  }

  /**
   * Creates a new event list expression using default values.
   * This constructor creates an event list expression with
   * an empty list of event identifiers.
   */
  protected EventListExpressionSubject()
  {
    this(null);
  }


  //#########################################################################
  //# Cloning and Assigning
  @Override
  public EventListExpressionSubject clone()
  {
    final ModuleProxyCloner cloner =
      ModuleSubjectFactory.getCloningInstance();
    return (EventListExpressionSubject) cloner.getClone(this);
  }

  @Override
  protected void collectUndoInfo(final ProxySubject newState,
                                 final RecursiveUndoInfo info,
                                 final Set<? extends Subject> boundary)
  {
    super.collectUndoInfo(newState, info, boundary);
    final EventListExpressionSubject downcast =
      (EventListExpressionSubject) newState;
    final UndoInfo step1 =
      mEventIdentifierList.createUndoInfo(downcast.mEventIdentifierList, boundary);
    if (step1 != null) {
      info.add(step1);
    }
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.EventListExpressionProxy
  public List<Proxy> getEventIdentifierList()
  {
    final List<?> precast = mEventIdentifierList;
    @SuppressWarnings("unchecked")
    final List<Proxy> downcast = (List<Proxy>) precast;
    return Collections.unmodifiableList(downcast);
  }


  //#########################################################################
  //# Setters
  /**
   * Gets the modifiable list of event identifiers constituting this event list expression.
   * Each element is of type {@link net.sourceforge.waters.model.module.IdentifierProxy IdentifierProxy} or {@link net.sourceforge.waters.model.module.ForeachProxy ForeachProxy}.
   */
  public ListSubject<AbstractSubject> getEventIdentifierListModifiable()
  {
    return mEventIdentifierList;
  }


  //#########################################################################
  //# Data Members
  private ListSubject<AbstractSubject> mEventIdentifierList;

}
