//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.plain.module
//# CLASS:   QualifiedIdentifierElement
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.plain.module;

import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.IdentifierProxy;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.model.module.QualifiedIdentifierProxy;


/**
 * An immutable implementation of the {@link QualifiedIdentifierProxy} interface.
 *
 * @author Robi Malik
 */

public final class QualifiedIdentifierElement
  extends IdentifierElement
  implements QualifiedIdentifierProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new qualified identifier.
   * @param plainText The original text of the new qualified identifier, or <CODE>null</CODE>.
   * @param baseIdentifier The base identifier of the new qualified identifier.
   * @param componentIdentifier The component identifier of the new qualified identifier.
   */
  public QualifiedIdentifierElement(final String plainText,
                                    final IdentifierProxy baseIdentifier,
                                    final IdentifierProxy componentIdentifier)
  {
    super(plainText);
    mBaseIdentifier = baseIdentifier;
    mComponentIdentifier = componentIdentifier;
  }

  /**
   * Creates a new qualified identifier using default values.
   * This constructor creates a qualified identifier with
   * the original text set to <CODE>null</CODE>.
   * @param baseIdentifier The base identifier of the new qualified identifier.
   * @param componentIdentifier The component identifier of the new qualified identifier.
   */
  public QualifiedIdentifierElement(final IdentifierProxy baseIdentifier,
                                    final IdentifierProxy componentIdentifier)
  {
    this(null,
         baseIdentifier,
         componentIdentifier);
  }


  //#########################################################################
  //# Cloning
  public QualifiedIdentifierElement clone()
  {
    return (QualifiedIdentifierElement) super.clone();
  }


  //#########################################################################
  //# Comparing
  public Class<QualifiedIdentifierProxy> getProxyInterface()
  {
    return QualifiedIdentifierProxy.class;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitQualifiedIdentifierProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.QualifiedIdentifierProxy
  public IdentifierProxy getBaseIdentifier()
  {
    return mBaseIdentifier;
  }

  public IdentifierProxy getComponentIdentifier()
  {
    return mComponentIdentifier;
  }


  //#########################################################################
  //# Data Members
  private final IdentifierProxy mBaseIdentifier;
  private final IdentifierProxy mComponentIdentifier;


  //#########################################################################
  //# Class Constants
  private static final long serialVersionUID = -1801684018144270566L;

}
