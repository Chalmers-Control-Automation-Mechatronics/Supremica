//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.plain.module
//# CLASS:   VariableComponentElement
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.plain.module;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.IdentifierProxy;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.model.module.SimpleExpressionProxy;
import net.sourceforge.waters.model.module.VariableComponentProxy;
import net.sourceforge.waters.model.module.VariableMarkingProxy;


/**
 * An immutable implementation of the {@link VariableComponentProxy} interface.
 *
 * @author Robi Malik
 */

public final class VariableComponentElement
  extends ComponentElement
  implements VariableComponentProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new variable.
   * @param identifier The identifier defining the name of the new variable.
   * @param type The range of the new variable.
   * @param deterministic The deterministic of the new variable.
   * @param initialStatePredicate The initial state predicate of the new variable.
   * @param variableMarkings The list of markings of the new variable, or <CODE>null</CODE> if empty.
   */
  public VariableComponentElement(final IdentifierProxy identifier,
                                  final SimpleExpressionProxy type,
                                  final boolean deterministic,
                                  final SimpleExpressionProxy initialStatePredicate,
                                  final Collection<? extends VariableMarkingProxy> variableMarkings)
  {
    super(identifier);
    mType = type;
    mIsDeterministic = deterministic;
    mInitialStatePredicate = initialStatePredicate;
    if (variableMarkings == null) {
      mVariableMarkings = Collections.emptyList();
    } else {
      final List<VariableMarkingProxy> variableMarkingsModifiable =
        new ArrayList<VariableMarkingProxy>(variableMarkings);
      mVariableMarkings =
        Collections.unmodifiableList(variableMarkingsModifiable);
    }
  }

  /**
   * Creates a new variable using default values.
   * This constructor creates a variable with
   * an empty list of markings.
   * @param identifier The identifier defining the name of the new variable.
   * @param type The range of the new variable.
   * @param deterministic The deterministic of the new variable.
   * @param initialStatePredicate The initial state predicate of the new variable.
   */
  public VariableComponentElement(final IdentifierProxy identifier,
                                  final SimpleExpressionProxy type,
                                  final boolean deterministic,
                                  final SimpleExpressionProxy initialStatePredicate)
  {
    this(identifier,
         type,
         deterministic,
         initialStatePredicate,
         null);
  }


  //#########################################################################
  //# Cloning
  @Override
  public VariableComponentElement clone()
  {
    return (VariableComponentElement) super.clone();
  }


  //#########################################################################
  //# Comparing
  public Class<VariableComponentProxy> getProxyInterface()
  {
    return VariableComponentProxy.class;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitVariableComponentProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.VariableComponentProxy
  public SimpleExpressionProxy getType()
  {
    return mType;
  }

  public boolean isDeterministic()
  {
    return mIsDeterministic;
  }

  public SimpleExpressionProxy getInitialStatePredicate()
  {
    return mInitialStatePredicate;
  }

  public List<VariableMarkingProxy> getVariableMarkings()
  {
    return mVariableMarkings;
  }


  //#########################################################################
  //# Data Members
  private final SimpleExpressionProxy mType;
  private final boolean mIsDeterministic;
  private final SimpleExpressionProxy mInitialStatePredicate;
  private final List<VariableMarkingProxy> mVariableMarkings;


  //#########################################################################
  //# Class Constants
  private static final long serialVersionUID = 3062243688693388120L;

}
