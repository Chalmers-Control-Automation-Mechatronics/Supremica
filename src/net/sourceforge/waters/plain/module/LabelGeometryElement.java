//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.plain.module
//# CLASS:   LabelGeometryElement
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.plain.module;

import java.awt.geom.Point2D;

import net.sourceforge.waters.model.base.Proxy;
import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.LabelGeometryProxy;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.plain.base.GeometryElement;

import net.sourceforge.waters.xsd.module.AnchorPosition;


/**
 * An immutable implementation of the {@link LabelGeometryProxy} interface.
 *
 * @author Robi Malik
 */

public final class LabelGeometryElement
  extends GeometryElement
  implements LabelGeometryProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new label geometry.
   * @param offset The offset of the new label geometry.
   * @param anchor The anchor position of the new label geometry.
   */
  public LabelGeometryElement(final Point2D offset,
                              final AnchorPosition anchor)
  {
    mOffset = (Point2D) offset.clone();
    mAnchor = anchor;
  }

  /**
   * Creates a new label geometry using default values.
   * This constructor creates a label geometry with
   * the anchor position set to <CODE>AnchorPosition.NW</CODE>.
   * @param offset The offset of the new label geometry.
   */
  public LabelGeometryElement(final Point2D offset)
  {
    this(offset,
         AnchorPosition.NW);
  }


  //#########################################################################
  //# Cloning
  public LabelGeometryElement clone()
  {
    return (LabelGeometryElement) super.clone();
  }


  //#########################################################################
  //# Equality and Hashcode
  public Class<LabelGeometryProxy> getProxyInterface()
  {
    return LabelGeometryProxy.class;
  }

  public boolean equalsByContents(final Proxy partner)
  {
    if (super.equalsByContents(partner)) {
      final LabelGeometryProxy downcast = (LabelGeometryProxy) partner;
      return
        mOffset.equals(downcast.getOffset()) &&
        mAnchor.equals(downcast.getAnchor());
    } else {
      return false;
    }
  }

  public int hashCodeByContents()
  {
    int result = super.hashCodeByContents();
    result *= 5;
    result += mOffset.hashCode();
    result *= 5;
    result += mAnchor.hashCode();
    return result;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitLabelGeometryProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.LabelGeometryProxy
  public Point2D getOffset()
  {
    return (Point2D) mOffset.clone();
  }

  public AnchorPosition getAnchor()
  {
    return mAnchor;
  }


  //#########################################################################
  //# Data Members
  private final Point2D mOffset;
  private final AnchorPosition mAnchor;


  //#########################################################################
  //# Class Constants
  private static final long serialVersionUID = -1337175543808520293L;

}
