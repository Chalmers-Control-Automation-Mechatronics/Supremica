//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.plain.module
//# CLASS:   GuardActionBlockElement
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.plain.module;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

import net.sourceforge.waters.model.base.Proxy;
import net.sourceforge.waters.model.base.ProxyTools;
import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.BinaryExpressionProxy;
import net.sourceforge.waters.model.module.GuardActionBlockProxy;
import net.sourceforge.waters.model.module.LabelGeometryProxy;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.model.module.SimpleExpressionProxy;
import net.sourceforge.waters.plain.base.Element;


/**
 * An immutable implementation of the {@link GuardActionBlockProxy} interface.
 *
 * @author Robi Malik
 */

public final class GuardActionBlockElement
  extends Element
  implements GuardActionBlockProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new guard action block.
   * @param guards The guards of the new guard action block, or <CODE>null</CODE> if empty.
   * @param actions The actions of the new guard action block, or <CODE>null</CODE> if empty.
   * @param geometry The geometry of the new guard action block, or <CODE>null</CODE>.
   */
  public GuardActionBlockElement(final Collection<? extends SimpleExpressionProxy> guards,
                                 final Collection<? extends BinaryExpressionProxy> actions,
                                 final LabelGeometryProxy geometry)
  {
    if (guards == null) {
      mGuards = Collections.emptyList();
    } else {
      final List<SimpleExpressionProxy> guardsModifiable =
        new ArrayList<SimpleExpressionProxy>(guards);
      mGuards =
        Collections.unmodifiableList(guardsModifiable);
    }
    if (actions == null) {
      mActions = Collections.emptyList();
    } else {
      final List<BinaryExpressionProxy> actionsModifiable =
        new ArrayList<BinaryExpressionProxy>(actions);
      mActions =
        Collections.unmodifiableList(actionsModifiable);
    }
    mGeometry = geometry;
  }

  /**
   * Creates a new guard action block using default values.
   * This constructor creates a guard action block with
   * an empty guards,
   * an empty actions, and
   * the geometry set to <CODE>null</CODE>.
   */
  public GuardActionBlockElement()
  {
    this(null,
         null,
         null);
  }


  //#########################################################################
  //# Cloning
  public GuardActionBlockElement clone()
  {
    return (GuardActionBlockElement) super.clone();
  }


  //#########################################################################
  //# Equality and Hashcode
  public Class<GuardActionBlockProxy> getProxyInterface()
  {
    return GuardActionBlockProxy.class;
  }

  public boolean equalsByContents(final Proxy partner)
  {
    if (super.equalsByContents(partner)) {
      final GuardActionBlockProxy downcast = (GuardActionBlockProxy) partner;
      return
        ProxyTools.isEqualListByContents
          (mGuards, downcast.getGuards()) &&
        ProxyTools.isEqualListByContents
          (mActions, downcast.getActions());
    } else {
      return false;
    }
  }

  public boolean equalsWithGeometry(final Proxy partner)
  {
    if (super.equalsByContents(partner)) {
      final GuardActionBlockProxy downcast = (GuardActionBlockProxy) partner;
      return
        ProxyTools.isEqualListWithGeometry
          (mGuards, downcast.getGuards()) &&
        ProxyTools.isEqualListWithGeometry
          (mActions, downcast.getActions()) &&
        ProxyTools.equalsWithGeometry(mGeometry, downcast.getGeometry());
    } else {
      return false;
    }
  }

  public int hashCodeByContents()
  {
    int result = super.hashCodeByContents();
    result *= 5;
    result += ProxyTools.getListHashCodeByContents(mGuards);
    result *= 5;
    result += ProxyTools.getListHashCodeByContents(mActions);
    return result;
  }

  public int hashCodeWithGeometry()
  {
    int result = super.hashCodeByContents();
    result *= 5;
    result += ProxyTools.getListHashCodeWithGeometry(mGuards);
    result *= 5;
    result += ProxyTools.getListHashCodeWithGeometry(mActions);
    result *= 5;
    result += ProxyTools.hashCodeWithGeometry(mGeometry);
    return result;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitGuardActionBlockProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.GuardActionBlockProxy
  public List<SimpleExpressionProxy> getGuards()
  {
    return mGuards;
  }

  public List<BinaryExpressionProxy> getActions()
  {
    return mActions;
  }

  public LabelGeometryProxy getGeometry()
  {
    return mGeometry;
  }


  //#########################################################################
  //# Data Members
  private final List<SimpleExpressionProxy> mGuards;
  private final List<BinaryExpressionProxy> mActions;
  private final LabelGeometryProxy mGeometry;


  //#########################################################################
  //# Class Constants
  private static final long serialVersionUID = -7569059563337147911L;

}
