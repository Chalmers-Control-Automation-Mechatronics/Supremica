//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: net.sourceforge.waters.plain.module
//# CLASS:   VariableMarkingElement
//###########################################################################
//# $Id$
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################

package net.sourceforge.waters.plain.module;

import net.sourceforge.waters.model.base.Proxy;
import net.sourceforge.waters.model.base.ProxyVisitor;
import net.sourceforge.waters.model.base.VisitorException;
import net.sourceforge.waters.model.module.IdentifierProxy;
import net.sourceforge.waters.model.module.ModuleProxyVisitor;
import net.sourceforge.waters.model.module.SimpleExpressionProxy;
import net.sourceforge.waters.model.module.VariableMarkingProxy;
import net.sourceforge.waters.plain.base.Element;


/**
 * An immutable implementation of the {@link VariableMarkingProxy} interface.
 *
 * @author Robi Malik
 */

public final class VariableMarkingElement
  extends Element
  implements VariableMarkingProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new variable marking.
   * @param proposition The proposition event of the new variable marking.
   * @param predicate The marking predicate of the new variable marking.
   */
  public VariableMarkingElement(final IdentifierProxy proposition,
                                final SimpleExpressionProxy predicate)
  {
    mProposition = proposition;
    mPredicate = predicate;
  }


  //#########################################################################
  //# Cloning
  public VariableMarkingElement clone()
  {
    return (VariableMarkingElement) super.clone();
  }


  //#########################################################################
  //# Equality and Hashcode
  public Class<VariableMarkingProxy> getProxyInterface()
  {
    return VariableMarkingProxy.class;
  }

  public boolean equalsByContents(final Proxy partner)
  {
    if (super.equalsByContents(partner)) {
      final VariableMarkingProxy downcast = (VariableMarkingProxy) partner;
      return
        mProposition.equalsByContents(downcast.getProposition()) &&
        mPredicate.equalsByContents(downcast.getPredicate());
    } else {
      return false;
    }
  }

  public boolean equalsWithGeometry(final Proxy partner)
  {
    if (super.equalsByContents(partner)) {
      final VariableMarkingProxy downcast = (VariableMarkingProxy) partner;
      return
        mProposition.equalsWithGeometry(downcast.getProposition()) &&
        mPredicate.equalsWithGeometry(downcast.getPredicate());
    } else {
      return false;
    }
  }

  public int hashCodeByContents()
  {
    int result = super.hashCodeByContents();
    result *= 5;
    result += mProposition.hashCodeByContents();
    result *= 5;
    result += mPredicate.hashCodeByContents();
    return result;
  }

  public int hashCodeWithGeometry()
  {
    int result = super.hashCodeByContents();
    result *= 5;
    result += mProposition.hashCodeWithGeometry();
    result *= 5;
    result += mPredicate.hashCodeWithGeometry();
    return result;
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.base.Proxy
  public Object acceptVisitor(final ProxyVisitor visitor)
    throws VisitorException
  {
    final ModuleProxyVisitor downcast = (ModuleProxyVisitor) visitor;
    return downcast.visitVariableMarkingProxy(this);
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.VariableMarkingProxy
  public IdentifierProxy getProposition()
  {
    return mProposition;
  }

  public SimpleExpressionProxy getPredicate()
  {
    return mPredicate;
  }


  //#########################################################################
  //# Data Members
  private final IdentifierProxy mProposition;
  private final SimpleExpressionProxy mPredicate;

}
