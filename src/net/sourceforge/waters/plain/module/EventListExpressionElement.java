//# -*- indent-tabs-mode: nil  c-basic-offset: 2 -*-
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//###########################################################################
//# Copyright (C) 2004-2023 Robi Malik
//###########################################################################
//# This file is part of Waters.
//# Waters is free software: you can redistribute it and/or modify it under
//# the terms of the GNU General Public License as published by the Free
//# Software Foundation, either version 2 of the License, or (at your option)
//# any later version.
//# Waters is distributed in the hope that it will be useful, but WITHOUT ANY
//# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
//# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
//# details.
//# You should have received a copy of the GNU General Public License along
//# with Waters. If not, see <http://www.gnu.org/licenses/>.
//#
//# Linking Waters statically or dynamically with other modules is making a
//# combined work based on Waters. Thus, the terms and conditions of the GNU
//# General Public License cover the whole combination.
//# In addition, as a special exception, the copyright holders of Waters give
//# you permission to combine Waters with code included in the standard
//# release of Supremica under the Supremica Software License Agreement (or
//# modified versions of such code, with unchanged license). You may copy and
//# distribute such a system following the terms of the GNU GPL for Waters and
//# the licenses of the other code concerned.
//# Note that people who make modified versions of Waters are not obligated to
//# grant this special exception for their modified versions; it is their
//# choice whether to do so. The GNU General Public License gives permission
//# to release a modified version without this exception; this exception also
//# makes it possible to release a modified version which carries forward this
//# exception.
//###########################################################################

package net.sourceforge.waters.plain.module;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

import net.sourceforge.waters.model.base.Proxy;
import net.sourceforge.waters.model.module.EventListExpressionProxy;


/**
 * An immutable implementation of the {@link EventListExpressionProxy} interface.
 *
 * @author Robi Malik
 */

public abstract class EventListExpressionElement
  extends ExpressionElement
  implements EventListExpressionProxy
{

  //#########################################################################
  //# Constructors
  /**
   * Creates a new event list expression.
   * @param eventIdentifierList The list of event identifiers of the new event list expression, or <CODE>null</CODE> if empty.
   *        Each element is of type {@link net.sourceforge.waters.model.module.IdentifierProxy IdentifierProxy} or {@link net.sourceforge.waters.model.module.ConditionalProxy ConditionalProxy} or {@link net.sourceforge.waters.model.module.ForeachProxy ForeachProxy}.
   */
  protected EventListExpressionElement(final Collection<? extends Proxy> eventIdentifierList)
  {
    if (eventIdentifierList == null) {
      mEventIdentifierList = Collections.emptyList();
    } else {
      final List<Proxy> eventIdentifierListModifiable =
        new ArrayList<Proxy>(eventIdentifierList);
      mEventIdentifierList =
        Collections.unmodifiableList(eventIdentifierListModifiable);
    }
  }

  /**
   * Creates a new event list expression using default values.
   * This constructor creates an event list expression with
   * an empty list of event identifiers.
   */
  protected EventListExpressionElement()
  {
    this(null);
  }


  //#########################################################################
  //# Cloning
  @Override
  public EventListExpressionElement clone()
  {
    return (EventListExpressionElement) super.clone();
  }


  //#########################################################################
  //# Interface net.sourceforge.waters.model.module.EventListExpressionProxy
  public List<Proxy> getEventIdentifierList()
  {
    return mEventIdentifierList;
  }


  //#########################################################################
  //# Data Members
  private final List<Proxy> mEventIdentifierList;


  //#########################################################################
  //# Class Constants
  private static final long serialVersionUID = -2466395113461561993L;

}
