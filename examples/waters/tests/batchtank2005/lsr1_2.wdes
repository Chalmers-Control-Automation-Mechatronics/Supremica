<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProductDES Name="lsr1_2" xmlns="http://waters.sourceforge.net/xsd/des">
<EventList>
<Event Kind="PROPOSITION" Name=":accepting"/>
<Event Kind="CONTROLLABLE" Name="close_in"/>
<Event Kind="CONTROLLABLE" Name="close_out"/>
<Event Kind="UNCONTROLLABLE" Name="jelly"/>
<Event Kind="CONTROLLABLE" Name="open_in"/>
<Event Kind="CONTROLLABLE" Name="open_out"/>
<Event Kind="UNCONTROLLABLE" Name="req_start"/>
<Event Kind="UNCONTROLLABLE" Name="req_stop"/>
<Event Kind="UNCONTROLLABLE" Name="s1_off"/>
<Event Kind="UNCONTROLLABLE" Name="s1_on"/>
<Event Kind="UNCONTROLLABLE" Name="s2_off"/>
<Event Kind="UNCONTROLLABLE" Name="s2_on"/>
<Event Kind="CONTROLLABLE" Name="stirrer_off"/>
<Event Kind="CONTROLLABLE" Name="stirrer_on"/>
</EventList>
<AutomataList>
<Automaton Kind="SPEC" Name="AlwaysFilled">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="close_in"/>
<EventRef Name="close_out"/>
<EventRef Name="open_in"/>
<EventRef Name="open_out"/>
<EventRef Name="req_start"/>
<EventRef Name="req_stop"/>
<EventRef Name="s1_off"/>
<EventRef Name="s1_on"/>
<EventRef Name="s2_off"/>
<EventRef Name="s2_on"/>
</EventRefList>
<StateList>
<State Initial="true" Name="EmptyTopClosedBottomClosed">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="EmptyTopClosedBottomOpen"/>
<State Name="EmptyTopOpenBottomClosed"/>
<State Name="FullTopClosedBottomClosed">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="FullTopClosedBottomOpen"/>
<State Name="FullTopOpenBottomClosed"/>
<State Name="PartiallyFullTopClosedBottomOpen"/>
<State Name="RequestStarted"/>
</StateList>
<TransitionList>
<Transition Target="EmptyTopClosedBottomClosed" Source="EmptyTopClosedBottomClosed" Event="close_out"/>
<Transition Target="EmptyTopOpenBottomClosed" Source="EmptyTopClosedBottomClosed" Event="open_in"/>
<Transition Target="EmptyTopClosedBottomClosed" Source="EmptyTopClosedBottomClosed" Event="req_start"/>
<Transition Target="EmptyTopClosedBottomClosed" Source="EmptyTopClosedBottomClosed" Event="req_stop"/>
<Transition Target="EmptyTopClosedBottomClosed" Source="EmptyTopClosedBottomClosed" Event="s1_off"/>
<Transition Target="EmptyTopClosedBottomClosed" Source="EmptyTopClosedBottomClosed" Event="s1_on"/>
<Transition Target="EmptyTopClosedBottomClosed" Source="EmptyTopClosedBottomOpen" Event="close_out"/>
<Transition Target="EmptyTopClosedBottomOpen" Source="EmptyTopClosedBottomOpen" Event="req_start"/>
<Transition Target="EmptyTopClosedBottomOpen" Source="EmptyTopClosedBottomOpen" Event="req_stop"/>
<Transition Target="EmptyTopClosedBottomOpen" Source="EmptyTopClosedBottomOpen" Event="s1_off"/>
<Transition Target="EmptyTopClosedBottomOpen" Source="EmptyTopClosedBottomOpen" Event="s2_off"/>
<Transition Target="EmptyTopOpenBottomClosed" Source="EmptyTopOpenBottomClosed" Event="close_in"/>
<Transition Target="EmptyTopOpenBottomClosed" Source="EmptyTopOpenBottomClosed" Event="open_in"/>
<Transition Target="EmptyTopOpenBottomClosed" Source="EmptyTopOpenBottomClosed" Event="req_start"/>
<Transition Target="EmptyTopOpenBottomClosed" Source="EmptyTopOpenBottomClosed" Event="req_stop"/>
<Transition Target="EmptyTopOpenBottomClosed" Source="EmptyTopOpenBottomClosed" Event="s1_off"/>
<Transition Target="EmptyTopOpenBottomClosed" Source="EmptyTopOpenBottomClosed" Event="s1_on"/>
<Transition Target="FullTopOpenBottomClosed" Source="EmptyTopOpenBottomClosed" Event="s2_on"/>
<Transition Target="RequestStarted" Source="FullTopClosedBottomClosed" Event="req_start"/>
<Transition Target="FullTopClosedBottomClosed" Source="FullTopClosedBottomClosed" Event="req_stop"/>
<Transition Target="FullTopClosedBottomClosed" Source="FullTopClosedBottomOpen" Event="close_out"/>
<Transition Target="FullTopClosedBottomOpen" Source="FullTopClosedBottomOpen" Event="req_start"/>
<Transition Target="FullTopClosedBottomOpen" Source="FullTopClosedBottomOpen" Event="req_stop"/>
<Transition Target="PartiallyFullTopClosedBottomOpen" Source="FullTopClosedBottomOpen" Event="s2_off"/>
<Transition Target="FullTopClosedBottomClosed" Source="FullTopOpenBottomClosed" Event="close_in"/>
<Transition Target="FullTopOpenBottomClosed" Source="FullTopOpenBottomClosed" Event="req_start"/>
<Transition Target="FullTopOpenBottomClosed" Source="FullTopOpenBottomClosed" Event="req_stop"/>
<Transition Target="PartiallyFullTopClosedBottomOpen" Source="PartiallyFullTopClosedBottomOpen" Event="req_start"/>
<Transition Target="EmptyTopClosedBottomOpen" Source="PartiallyFullTopClosedBottomOpen" Event="req_stop"/>
<Transition Target="EmptyTopClosedBottomOpen" Source="PartiallyFullTopClosedBottomOpen" Event="s1_off"/>
<Transition Target="PartiallyFullTopClosedBottomOpen" Source="PartiallyFullTopClosedBottomOpen" Event="s2_off"/>
<Transition Target="FullTopClosedBottomOpen" Source="RequestStarted" Event="open_out"/>
<Transition Target="FullTopClosedBottomClosed" Source="RequestStarted" Event="req_stop"/>
</TransitionList>
</Automaton>
<Automaton Kind="SPEC" Name="ValveMonitor">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="close_in"/>
<EventRef Name="close_out"/>
<EventRef Name="open_in"/>
<EventRef Name="open_out"/>
<EventRef Name="s1_off"/>
<EventRef Name="s1_on"/>
<EventRef Name="s2_off"/>
<EventRef Name="s2_on"/>
<EventRef Name="stirrer_off"/>
<EventRef Name="stirrer_on"/>
</EventRefList>
<StateList>
<State Initial="true" Name="BothClosedStirrerOff">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="InClosedOutOpenStirrerOn"/>
<State Name="InClosedOutOpenStirrerOnofOff"/>
<State Name="InOpenOutCLosedStirrerOn"/>
<State Name="InOpenOutClosedStirrerOnorOff"/>
</StateList>
<TransitionList>
<Transition Target="InOpenOutClosedStirrerOnorOff" Source="BothClosedStirrerOff" Event="open_in"/>
<Transition Target="InClosedOutOpenStirrerOnofOff" Source="BothClosedStirrerOff" Event="open_out"/>
<Transition Target="BothClosedStirrerOff" Source="BothClosedStirrerOff" Event="s1_off"/>
<Transition Target="BothClosedStirrerOff" Source="BothClosedStirrerOff" Event="s1_on"/>
<Transition Target="BothClosedStirrerOff" Source="BothClosedStirrerOff" Event="s2_off"/>
<Transition Target="BothClosedStirrerOff" Source="BothClosedStirrerOff" Event="s2_on"/>
<Transition Target="BothClosedStirrerOff" Source="InClosedOutOpenStirrerOn" Event="close_out"/>
<Transition Target="InClosedOutOpenStirrerOn" Source="InClosedOutOpenStirrerOn" Event="s1_off"/>
<Transition Target="InClosedOutOpenStirrerOn" Source="InClosedOutOpenStirrerOn" Event="s2_off"/>
<Transition Target="InClosedOutOpenStirrerOnofOff" Source="InClosedOutOpenStirrerOnofOff" Event="s1_off"/>
<Transition Target="InClosedOutOpenStirrerOnofOff" Source="InClosedOutOpenStirrerOnofOff" Event="s2_off"/>
<Transition Target="InClosedOutOpenStirrerOnofOff" Source="InClosedOutOpenStirrerOnofOff" Event="stirrer_off"/>
<Transition Target="InClosedOutOpenStirrerOn" Source="InClosedOutOpenStirrerOnofOff" Event="stirrer_on"/>
<Transition Target="BothClosedStirrerOff" Source="InOpenOutCLosedStirrerOn" Event="close_in"/>
<Transition Target="InOpenOutCLosedStirrerOn" Source="InOpenOutCLosedStirrerOn" Event="s1_on"/>
<Transition Target="InOpenOutCLosedStirrerOn" Source="InOpenOutCLosedStirrerOn" Event="s2_on"/>
<Transition Target="InOpenOutClosedStirrerOnorOff" Source="InOpenOutClosedStirrerOnorOff" Event="s1_on"/>
<Transition Target="InOpenOutClosedStirrerOnorOff" Source="InOpenOutClosedStirrerOnorOff" Event="s2_on"/>
<Transition Target="InOpenOutClosedStirrerOnorOff" Source="InOpenOutClosedStirrerOnorOff" Event="stirrer_off"/>
<Transition Target="InOpenOutCLosedStirrerOn" Source="InOpenOutClosedStirrerOnorOff" Event="stirrer_on"/>
</TransitionList>
</Automaton>
<Automaton Kind="SPEC" Name="prop_no_jelly">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="jelly"/>
</EventRefList>
<StateList>
<State Initial="true" Name="s0">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
</StateList>
</Automaton>
<Automaton Kind="PLANT" Name="requests">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="req_start"/>
<EventRef Name="req_stop"/>
</EventRefList>
<StateList>
<State Initial="true" Name="NOREQ">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="REQ"/>
</StateList>
<TransitionList>
<Transition Target="REQ" Source="NOREQ" Event="req_start"/>
<Transition Target="NOREQ" Source="REQ" Event="req_stop"/>
</TransitionList>
</Automaton>
<Automaton Kind="PLANT" Name="sensors">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="jelly"/>
<EventRef Name="s1_off"/>
<EventRef Name="s1_on"/>
<EventRef Name="s2_off"/>
<EventRef Name="s2_on"/>
</EventRefList>
<StateList>
<State Initial="true" Name="EMPTY"/>
<State Name="FULL">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="PARTIAL"/>
</StateList>
<TransitionList>
<Transition Target="PARTIAL" Source="EMPTY" Event="s1_on"/>
<Transition Target="FULL" Source="FULL" Event="jelly"/>
<Transition Target="PARTIAL" Source="FULL" Event="s2_off"/>
<Transition Target="PARTIAL" Source="PARTIAL" Event="jelly"/>
<Transition Target="EMPTY" Source="PARTIAL" Event="s1_off"/>
<Transition Target="FULL" Source="PARTIAL" Event="s2_on"/>
</TransitionList>
</Automaton>
<Automaton Kind="PLANT" Name="stirrer">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="jelly"/>
<EventRef Name="stirrer_off"/>
<EventRef Name="stirrer_on"/>
</EventRefList>
<StateList>
<State Initial="true" Name="OFF">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="ON">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
</StateList>
<TransitionList>
<Transition Target="OFF" Source="OFF" Event="jelly"/>
<Transition Target="ON" Source="OFF" Event="stirrer_on"/>
<Transition Target="OFF" Source="ON" Event="stirrer_off"/>
</TransitionList>
</Automaton>
<Automaton Kind="PLANT" Name="valve_in">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="close_in"/>
<EventRef Name="jelly"/>
<EventRef Name="open_in"/>
<EventRef Name="s1_on"/>
<EventRef Name="s2_on"/>
</EventRefList>
<StateList>
<State Initial="true" Name="CLOSED">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="OPEN"/>
</StateList>
<TransitionList>
<Transition Target="CLOSED" Source="CLOSED" Event="jelly"/>
<Transition Target="OPEN" Source="CLOSED" Event="open_in"/>
<Transition Target="CLOSED" Source="OPEN" Event="close_in"/>
<Transition Target="OPEN" Source="OPEN" Event="s1_on"/>
<Transition Target="OPEN" Source="OPEN" Event="s2_on"/>
</TransitionList>
</Automaton>
<Automaton Kind="PLANT" Name="valve_out">
<EventRefList>
<EventRef Name=":accepting"/>
<EventRef Name="close_out"/>
<EventRef Name="jelly"/>
<EventRef Name="open_out"/>
<EventRef Name="s1_off"/>
<EventRef Name="s2_off"/>
</EventRefList>
<StateList>
<State Initial="true" Name="CLOSED">
<EventRefList>
<EventRef Name=":accepting"/>
</EventRefList>
</State>
<State Name="OPEN"/>
</StateList>
<TransitionList>
<Transition Target="CLOSED" Source="CLOSED" Event="jelly"/>
<Transition Target="OPEN" Source="CLOSED" Event="open_out"/>
<Transition Target="CLOSED" Source="OPEN" Event="close_out"/>
<Transition Target="OPEN" Source="OPEN" Event="s1_off"/>
<Transition Target="OPEN" Source="OPEN" Event="s2_off"/>
</TransitionList>
</Automaton>
</AutomataList>
</ProductDES>


