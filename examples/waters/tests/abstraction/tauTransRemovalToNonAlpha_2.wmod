<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Module Name="tauTransRemovalToNonAlpha_2" xmlns:ns2="http://waters.sourceforge.net/xsd/base" xmlns="http://waters.sourceforge.net/xsd/module">
    <ns2:Comment>A simple test for the tauTransRemovalToNonAlphaStates rule. This is the first example from the paper "A Compositional Approach for Verifying Generalised Nonblocking" by Robi Malik and Ryan Leduc, ICCA 2009, and the test checks whether the abstra
ction correctly determines that this automaton cannot be abstracted further.</ns2:Comment>
    <EventDeclList>
        <EventDecl Kind="PROPOSITION" Name=":alpha">
            <ColorGeometry>
                <Color Red="128" Green="128" Blue="128"/>
            </ColorGeometry>
        </EventDecl>
        <EventDecl Kind="PROPOSITION" Name=":accepting">
            <ColorGeometry>
                <Color Red="0" Green="0" Blue="0"/>
            </ColorGeometry>
        </EventDecl>
        <EventDecl Kind="CONTROLLABLE" Name="e1"/>
        <EventDecl Kind="CONTROLLABLE" Name="e2"/>
        <EventDecl Observable="false" Kind="UNCONTROLLABLE" Name="tau"/>
    </EventDeclList>
    <ComponentList>
        <SimpleComponent Kind="SPEC" Name="before">
            <Graph Deterministic="false">
                <NodeList>
                    <SimpleNode Initial="true" Name="S0">
                        <EventList>
                            <SimpleIdentifier Name=":alpha"/>
                        </EventList>
                        <PointGeometry>
                            <Point Y="64" X="64"/>
                        </PointGeometry>
                        <InitialArrowGeometry>
                            <Point Y="0" X="-21"/>
                        </InitialArrowGeometry>
                        <LabelGeometry Anchor="NW">
                            <Point Y="0" X="-20"/>
                        </LabelGeometry>
                    </SimpleNode>
                    <SimpleNode Name="S2">
                        <EventList>
                            <SimpleIdentifier Name=":accepting"/>
                        </EventList>
                        <PointGeometry>
                            <Point Y="96" X="96"/>
                        </PointGeometry>
                        <LabelGeometry Anchor="NW">
                            <Point Y="-5" X="-24"/>
                        </LabelGeometry>
                    </SimpleNode>
                    <SimpleNode Name="S3">
                        <EventList>
                            <SimpleIdentifier Name=":accepting"/>
                        </EventList>
                        <PointGeometry>
                            <Point Y="96" X="160"/>
                        </PointGeometry>
                        <LabelGeometry Anchor="NW">
                            <Point Y="-5" X="-23"/>
                        </LabelGeometry>
                    </SimpleNode>
                </NodeList>
                <EdgeList>
                    <Edge Target="S2" Source="S0">
                        <LabelBlock>
                            <SimpleIdentifier Name="e1"/>
                            <LabelGeometry Anchor="NW">
                                <Point Y="-12" X="3"/>
                            </LabelGeometry>
                        </LabelBlock>
                    </Edge>
                    <Edge Target="S3" Source="S0">
                        <LabelBlock>
                            <SimpleIdentifier Name="e2"/>
                        </LabelBlock>
                        <SplineGeometry>
                            <Point Y="57" X="128"/>
                        </SplineGeometry>
                    </Edge>
                </EdgeList>
            </Graph>
        </SimpleComponent>
    </ComponentList>
</Module>
