<!-- -*- indent-tabs-mode: nil -*- -->

<project name="waters" default="waters">
  <description>
  </description>

  <property file="build.properties"/>                                    

  <property name="supremica.root" location=".."/>
  <property name="supremica.lib" location="${supremica.root}/lib"/>
  <property name="supremica.src" location="${supremica.root}/src"/>
  <property name="supremica.testsrc" location="${supremica.root}/tests/src"/>

  <property name="activation.jar" location="${supremica.lib}/activation.jar"/>
  <property name="fuber.jar" location="${supremica.lib}/fuber.jar"/>
  <property name="javabdd.jar" location="${supremica.lib}/javabdd-2.0.jar"/>
  <property name="java_cup.jar" location="${supremica.lib}/java_cup.jar"/>
  <property name="jaxb-api.jar" location="${supremica.lib}/jaxb-api.jar"/>
  <property name="jaxb-impl.jar" location="${supremica.lib}/jaxb-impl.jar"/>
  <property name="jaxb-xjc.jar" location="${supremica.lib}/jaxb-xjc.jar"/>
  <property name="jsr173_api.jar" location="${supremica.lib}/jsr173_1.0_api.jar"/>
  <property name="log4j.jar" location="${supremica.lib}/log4j.jar"/>
  <property name="junit.jar" location="${supremica.lib}/junit.jar"/>
  <property name="trove.jar" location="${supremica.lib}/trove.jar"/>

  <path id="jaxb.classpath">
    <pathelement location="${activation.jar}"/>
    <pathelement location="${jaxb-api.jar}"/>
    <pathelement location="${jaxb-impl.jar}"/>
    <pathelement location="${jsr173_api.jar}"/>
  </path>

  <property name="bddlib" location="${supremica.root}/dist"/>
  <property name="classes" location="java/classes"/>
  <property name="cpp" location="cpp"/>
  <property name="cpplib" location="${cpp}/lib"/>
  <property name="docsrc" location="java/javadoc"/>
  <property name="supremica.examples" location="${supremica.root}/examples"/>
  <property name="waters.examples" location="${supremica.examples}/waters"/>
  <property name="jar" location="java/jar"/>
  <property name="javadoc" location="java/docs"/>
  <property name="logs" location="logs"/>
  <property name="logs.reports" location="${logs}/reports"/>
  <property name="logs.results" location="${logs}/results"/>
  <property name="src" location="java/src"/>
  <property name="xml" location="xml"/>
  <property name="xsd" location="${xml}/xsd"/>
  <property name="xsl" location="${xml}/xsl"/>

  <property name="javah.dir" location="${cpp}/src/waters/javah"/>
  <property name="javah.file" location="${javah.dir}/Invocations.h"/>
  <property name="jaxb.jar" location="${jar}/waters_jaxb.jar"/>
  <property name="jniglue.indir" location="${cpp}/src/jni/templates"/>
  <property name="jniglue.outdir" location="${cpp}/src/jni/glue"/>
  <property name="jniglue.jar" location="${jar}/jniglue.jar"/>
  <property name="test.jar" location="${jar}/waters_test.jar"/>
  <property name="test.classes" location="${classes}/test"/>
  <property name="waters.jar" location="${jar}/waters.jar"/>
  <property name="waters.classes" location="${classes}/waters"/>

  <property name="javadoc552" location="java/docs552"/>
  <property name="waters552.jar" location="${jar}/waters552.jar"/>

  <path id="supremica.efa.classpath">
    <pathelement location="${fuber.jar}"/>
    <pathelement location="${java_cup.jar}"/>
    <!-- Cannot depend on Supremica/build !!! -->
  </path>

  <path id="waters.compile.classpath">
    <path refid="jaxb.classpath"/>
    <pathelement location="${jaxb.jar}"/>
    <pathelement location="${javabdd.jar}"/>
    <pathelement location="${log4j.jar}"/>
    <pathelement location="${trove.jar}"/>
    <path refid="supremica.efa.classpath"/>
  </path>

  <path id="waters.test.classpath">
    <path refid="waters.compile.classpath"/>
    <pathelement location="${waters.jar}"/>
    <pathelement location="${test.jar}"/>
    <pathelement location="${junit.jar}"/>
  </path>

  <pathconvert property="waters.library.path" targetos="unix">
    <path>
      <pathelement path="${java.library.path}"/>
      <pathelement location="${cpplib}"/>
      <pathelement location="${bddlib}"/>
    </path>
  </pathconvert>

  <target name="init">
    <tstamp/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${jar}"/>
  </target>

  <target name="jaxb-generate" depends="init">
    <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
      <classpath>
        <path refid="jaxb.classpath"/>
        <pathelement location="${jaxb-xjc.jar}"/>
      </classpath>
    </taskdef>
    <xjc target="${src}" extension="true" removeOldOutput="yes">
      <schema dir="${xsd}" includes="waters-des.xsd waters-module.xsd"/>
      <produces dir="${src}/net/sourceforge/waters/xsd/"
                includes="base/* base/impl/* des/* des/impl/*
                          module/* module/impl/*"/>
    </xjc>
  </target>

  <target name="jaxb-compile" depends="jaxb-generate">
    <mkdir dir="${waters.classes}"/>
    <javac srcdir="${src}" destdir="${waters.classes}"
           includes="net/sourceforge/waters/xsd/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath refid="jaxb.classpath"/>
    </javac>
    <javac srcdir="${supremica.src}" destdir="${waters.classes}"
           includes="net/sourceforge/waters/model/unchecked/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}"/>
  </target>

  <target name="jaxb-jar" depends="jaxb-compile"
          description="Create the waters_jaxb2.jar archive.">
    <jar jarfile="${jaxb.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/model/unchecked/**/*.class"/>
        <include name="net/sourceforge/waters/xsd/**/*.class"/>
       </fileset>
      <fileset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*.properties"/>
        <include name="net/sourceforge/waters/xsd/**/*.ser"/>
       </fileset>
    </jar>
  </target>

  <target name="waters-compile" depends="jaxb-jar">
    <mkdir dir="${waters.classes}"/>
    <javac sourcepath="" srcdir="${supremica.src}" destdir="${waters.classes}" 
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath refid="waters.compile.classpath"/>
      <compilerarg value="-Xlint:unchecked"/>
      <compilerarg value="-Xlint:deprecation"/>
      <include name="net/sourceforge/waters/**/*.java"/>
       <exclude name="net/sourceforge/waters/gui/**/*.java"/>
      <exclude name="net/sourceforge/waters/mbt/**/*.java"/>
      <exclude
          name="net/sourceforge/waters/analysis/modular/supremica/*.java"/>
      <exclude name="net/sourceforge/waters/model/unchecked/**/*.java"/>
      <include name="org/supremica/log/**/*.java"/>
      <!-- Don't really want to depend on org.supremica.automata -->
      <include name="org/supremica/automata/ExtendedAutomataExpander.java"/>
      <include name="org/supremica/automata/VariableHelper.java"/>
   </javac>
  </target>

  <target name="waters-jar" depends="waters-compile">
    <copy file="${xsl}/vw.xsl"
          todir="${waters.classes}/net/sourceforge/waters/valid"/>
    <copy todir="${waters.classes}/net/sourceforge/waters/model/marshaller">
      <fileset dir="${xsd}" includes="*.xsd"/>
    </copy>
    <jar jarfile="${waters.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
        <include name="net/sourceforge/waters/**/*.xsd"/>
        <include name="net/sourceforge/waters/**/*.xsl"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
        <exclude name="net/sourceforge/waters/model/unchecked/**"/>
        <exclude name="net/sourceforge/waters/xsd/**"/>
        <include name="org/supremica/automata/**"/>
        <include name="org/supremica/log/**"/>
      </fileset>
    </jar>
  </target>

  <target name="jar552" depends="waters-compile">
    <copy file="${xsl}/vw.xsl"
          todir="${waters.classes}/net/sourceforge/waters/valid"/>
    <copy todir="${waters.classes}/net/sourceforge/waters/model/marshaller">
      <fileset dir="${xsd}" includes="*.xsd"/>
    </copy>
    <jar jarfile="${waters552.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
        <include name="net/sourceforge/waters/**/*.xsd"/>
        <include name="net/sourceforge/waters/**/*.xsl"/>
        <exclude name="net/sourceforge/waters/analysis/**"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/cpp/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
        <exclude name="net/sourceforge/waters/mbt/**"/>
        <exclude name="net/sourceforge/waters/model/analysis/**"/>
        <exclude name="net/sourceforge/waters/samples/**"/>
      </fileset>
    </jar>
    <jar jarfile="${waters552.jar}" update="true">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/analysis/ModelChecker.class"/>
      </fileset>
    </jar>
  </target>

  <target name="javah" depends="waters-compile"
          description="Create JNI headers.">
    <mkdir dir="${javah.dir}"/>
    <javah outputFile="${javah.file}" classpath="${waters.classes}">
      <class name="net.sourceforge.waters.cpp.analysis.NativeSafetyVerifier"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeHashSet"/>
    </javah>
  </target>

  <target name="jniglue-compile">
    <javac srcdir="${src}" destdir="${waters.classes}" 
           includes="net/sourceforge/waters/build/jniglue/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath refid="jaxb.classpath"/>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="jniglue-jar" depends="jniglue-compile">
    <jar jarfile="${jniglue.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/build/jniglue/*.class"/>
      </fileset>
    </jar>
  </target>

  <target name="jniglue" depends="jniglue-jar,waters-jar"
          description="Create JNI Glue C++ files.">
    <mkdir dir="${jniglue.outdir}"/>
    <java classname="net.sourceforge.waters.build.jniglue.GlueCompiler"
          fork="true" failonerror="true">
      <classpath>
        <pathelement location="${jaxb.jar}"/>
        <pathelement location="${jniglue.jar}"/>
        <pathelement location="${waters.jar}"/>
        <path refid="jaxb.classpath"/>
      </classpath>
      <arg file="${jniglue.indir}"/>
      <arg file="${jniglue.outdir}"/>
      <arg file="${supremica.src}"/>
      <arg file="${jniglue.jar}"/>
    </java> 
  </target>

  <target name="cpp" depends="javah,jniglue"
          description="Build native library.">
    <exec executable="${native.make}" dir="${cpp}"
          failonerror="true" failifexecutionfails="false"/>
  </target>

  <target name="waters" depends="waters-jar,cpp"
          description="Build all Waters executables."/>

  <target name="test-compile" depends="waters-jar">
    <mkdir dir="${test.classes}"/>
    <javac srcdir="${supremica.testsrc}" destdir="${test.classes}" 
           includes="net/sourceforge/waters/**/*.java"
           excludes="net/sourceforge/waters/gui/**/*.java
                 net/sourceforge/waters/analysis/modular/supremica/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath>
        <path refid="waters.compile.classpath"/>
        <pathelement location="${waters.jar}"/>
        <pathelement location="${junit.jar}"/>
      </classpath>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="test-jar" depends="test-compile">
    <jar jarfile="${test.jar}">
      <fileset dir="${test.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
      </fileset>
      <zipfileset dir="${waters.examples}"
                  prefix="net/sourceforge/waters/model/marshaller/examples"/>
    </jar>
  </target>

  <target name="runtest" depends="test-jar,cpp">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="512m">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/**/*Test.java"/>
          <exclude name="net/sourceforge/waters/gui/**/*.java"/>
          <exclude name="net/sourceforge/waters/analysis/modular/**/*.java"/>
          <exclude name="**/*Heuristic*.java"/>
          <exclude name="**/Abstract*.java"/>
          <exclude name="**/Native*.java"/>
        </fileset>
      </batchtest>
      <batchtest todir="${logs.results}" if="native.make">
        <fileset dir="${supremica.testsrc}">
          <include name="**/Native*.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
      <sysproperty key="java.library.path" value="${waters.library.path}"/>
    </junit>
  </target>

  <target name="runtest1" depends="test-jar,cpp">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="512m">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/**/PlainModuleTest.java"/>
          <exclude name="**/Abstract*.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
      <sysproperty key="java.library.path" value="${waters.library.path}"/>
    </junit>
  </target>

  <target name="test2" depends="test-jar">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="512m">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/analysis/bdd/**/*.java"/>
          <exclude name="**/Abstract*.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
    </junit>
  </target>
  
  <target name="run_test3" depends="test-jar,cpp">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="512m">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/**/*Maze*Test.java"/>
          <exclude name="**/Abstract*.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
      <sysproperty key="java.library.path" value="${waters.library.path}"/>
    </junit>
  </target>
  
  <target name="run_test4" depends="test-jar">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="512m">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/analysis/monolithic/MonolithicControllabilityCheckerTest.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
    </junit>
  </target>
  
  <target name="run_test5" depends="test-jar,cpp">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="512m">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/analysis/modular/*Test.java"/>
          <exclude name="net/sourceforge/waters/analysis/modular/LateNotAcceptHeuristicTest.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
      <sysproperty key="java.library.path" value="${waters.library.path}"/>
    </junit>
  </target>
  
  <target name="run_test6">
    <java classname="net.sourceforge.waters.analysis.modular.SpeedComparison" fork="true" maxmemory="512m">
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
      <sysproperty key="java.library.path" value="${waters.library.path}"/>
    </java>
  </target>
  
  <target name="run_test7" depends="test-jar,cpp">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="512m">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/analysis/modular/OneUncontrollableCheckerTest.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
      <sysproperty key="java.library.path" value="${waters.library.path}"/>
    </junit>
  </target>

  <target name="test-report">
    <mkdir dir="${logs.reports}"/>
    <junitreport todir="${logs.reports}">
      <fileset dir="${logs.results}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${logs.reports}"/>
    </junitreport>
  </target>

  <target name="test" depends="runtest,test-report"
          description="Run the test cases."/>

  <target name="test1" depends="runtest1,test-report"
          description="Run some test cases."/>
          
  <target name="test3" depends="run_test3,test-report"
          description="Run some test cases."/>

  <target name="test4" depends="run_test4,test-report"
          description="Run some test cases."/>
          
  <target name="test5" depends="run_test5,test-report"
          description="Run some test cases."/>
    
  <target name="test7" depends="run_test7,test-report"
     description="Run some test cases."/>

  <target name="doc" depends="jaxb-generate"
          description="Generate Javadoc documentation.">
    <delete dir="${javadoc}"/>
    <mkdir dir="${javadoc}"/>
    <javadoc destdir="${javadoc}" windowtitle="Waters API">
      <packageset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*"/>
        <exclude name="net/sourceforge/waters/xsd/*/impl/**"/>
      </packageset>
      <packageset dir="${supremica.src}">
        <include name="net/sourceforge/waters/**"/>
        <exclude name="net/sourceforge/waters/analysis/modular/supremica/**"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
        <exclude name="net/sourceforge/waters/mbt/**"/>
      </packageset>
      <doctitle><![CDATA[<h1>Waters API Documentation</h1>]]></doctitle>
      <link href="${java.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/j2sdk"/>
      <link href="${jaxme.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/jaxme"/>
      <link href="${junit.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/junit"/>
      <classpath refid="waters.test.classpath"/>
    </javadoc>
  </target>

  <target name="doc552" depends="jaxb-generate"
          description="Generate Javadoc documentation.">
    <delete dir="${javadoc552}"/>
    <mkdir dir="${javadoc552}/src"/>
    <copy todir="${javadoc552}/src">
      <fileset dir="${supremica.src}">
        <include name="net/sourceforge/waters/analysis/Controllability*"/>
        <include name="net/sourceforge/waters/analysis/ModelChecker.java"/>
        <include name="net/sourceforge/waters/model/**"/>
        <exclude name="net/sourceforge/waters/model/analysis/**"/>
        <include name="net/sourceforge/waters/plain/**"/>
        <include name="net/sourceforge/waters/subject/**"/>
        <include name="net/sourceforge/waters/valid/**"/>
      </fileset>
    </copy>
    <javadoc destdir="${javadoc552}" windowtitle="Waters API">
      <packageset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*"/>
        <exclude name="net/sourceforge/waters/xsd/*/impl/**"/>
      </packageset>
      <packageset dir="${javadoc552}/src"/>
      <doctitle><![CDATA[<h1>Waters API Documentation</h1>]]></doctitle>
      <link href="${java.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/j2sdk"/>
      <link href="${jaxme.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/jaxme"/>
      <link href="${junit.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/junit"/>
      <classpath refid="waters.test.classpath"/>
    </javadoc>
    <delete dir="${javadoc552}/src"/>
  </target>

  <target name="www" depends="doc"
          description="Install javadocs on local web server.">
    <delete dir="${javadoc.targetdir}"/>
    <copy todir="${javadoc.targetdir}">
      <fileset dir="${javadoc}"/>
    </copy>
  </target>

  <target name="clean" description="Clean up.">
    <delete dir="${src}/net/sourceforge/waters/xsd/"/>
    <delete dir="${classes}"/>
    <delete dir="${logs}"/>
    <delete dir="${jar}"/>
    <delete dir="${javadoc}"/>
    <delete dir="${javah.dir}"/>
    <delete dir="${jniglue.outdir}"/>
    <exec executable="${native.make}" dir="${cpp}"
          failifexecutionfails="false">
      <arg value="clean"/>
    </exec>
  </target>

</project>
