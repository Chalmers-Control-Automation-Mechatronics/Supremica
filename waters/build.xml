<!-- -*- indent-tabs-mode: nil -*- -->

<project name="waters" default="waters">
  <description>
  </description>

  <property file="build.properties"/>                                    

  <property name="supremica.root" location=".."/>
  <property name="supremica.lib" location="${supremica.root}/lib"/>
  <property name="supremica.src" location="${supremica.root}/src"/>
  <property name="supremica.testsrc" location="${supremica.root}/tests/src"/>

  <property name="classes" location="java/classes"/>
  <property name="cpp" location="cpp"/>
  <property name="cpplib" location="${cpp}/lib"/>
  <property name="docsrc" location="java/javadoc"/>
  <property name="examples" location="${supremica.root}/examples/waters"/>
  <property name="jar" location="java/jar"/>
  <property name="javadoc" location="java/docs"/>
  <property name="logs" location="logs"/>
  <property name="src" location="java/src"/>
  <property name="xml" location="xml"/>
  <property name="xsd" location="${xml}/xsd"/>
  <property name="xsl" location="${xml}/xsl"/>

  <property name="javah.dir" location="${cpp}/src/waters/javah"/>
  <property name="javah.file" location="${javah.dir}/Invocations.h"/>
  <property name="jaxb.jar" location="${jar}/waters_jaxb.jar"/>
  <property name="jniglue.indir" location="${cpp}/src/jni/templates"/>
  <property name="jniglue.outdir" location="${cpp}/src/jni/glue"/>
  <property name="jniglue.jar" location="${jar}/jniglue.jar"/>
  <property name="test.jar" location="${jar}/waters_test.jar"/>
  <property name="test.classes" location="${classes}/test"/>
  <property name="waters.jar" location="${jar}/waters.jar"/>
  <property name="waters.classes" location="${classes}/waters"/>

  <path id="external-classpath">
    <pathelement path="${jwsdp.classpath}"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${jar}"/>
  </target>

  <target name="jaxb-generate" depends="init">
    <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
      <classpath>
        <pathelement path="${jwsdp.classpath}"/>
      </classpath>
    </taskdef>
    <xjc target="${src}" extension="true" removeOldOutput="yes">
      <schema dir="${xsd}" includes="waters-des.xsd waters-module.xsd"/>
      <produces dir="${src}/net/sourceforge/waters/xsd/"
                includes="base/* base/impl/* des/* des/impl/* module/* module/impl/*"/>
    </xjc>
  </target>

  <target name="jaxb-compile" depends="jaxb-generate">
    <mkdir dir="${waters.classes}"/>
    <javac srcdir="${src}" destdir="${waters.classes}"
           includes="net/sourceforge/waters/xsd/**/*.java
                     org/w3/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath refid="external-classpath"/>
    </javac>
    <javac srcdir="${supremica.src}" destdir="${waters.classes}"
           includes="net/sourceforge/waters/model/unchecked/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}"/>
  </target>

  <target name="jaxb-jar" depends="jaxb-compile"
          description="Create the waters_jaxb.jar archive.">
    <jar jarfile="${jaxb.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/model/unchecked/**/*.class"/>
        <include name="net/sourceforge/waters/xsd/**/*.class"/>
        <include name="org/w3/**/*.class"/>
      </fileset>
      <fileset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*.properties"/>
        <include name="net/sourceforge/waters/xsd/**/*.ser"/>
        <include name="org/w3/**/*.properties"/>
        <include name="org/w3/**/*.ser"/>
      </fileset>
    </jar>
    <copy file="${jaxb.jar}" todir="${supremica.lib}"/>
  </target>

  <target name="waters-compile" depends="jaxb-jar">
    <mkdir dir="${waters.classes}"/>
    <javac srcdir="${supremica.src}" destdir="${waters.classes}" 
           includes="net/sourceforge/waters/**/*.java"
           excludes="net/sourceforge/waters/gui/**/*.java
                     net/sourceforge/waters/model/unchecked/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath>
        <path refid="external-classpath"/>
        <pathelement location="${jaxb.jar}"/>
      </classpath>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
 </target>

  <target name="waters-jar" depends="waters-compile">
    <jar jarfile="${waters.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
        <exclude name="net/sourceforge/waters/model/unchecked/**"/>
        <exclude name="net/sourceforge/waters/xsd/**"/>
      </fileset>
      <zipfileset file="${xsl}/vw.xsl"
                  fullpath="net/sourceforge/waters/valid/vw.xsl"/>
    </jar>
  </target>

  <target name="javah" depends="waters-compile"
          description="Create JNI headers.">
    <mkdir dir="${javah.dir}"/>
    <javah outputFile="${javah.file}" classpath="${waters.classes}">
      <class name="net.sourceforge.waters.model.analysis.ProductDESCopier"/>
    </javah>
  </target>

  <target name="jniglue-compile">
    <javac srcdir="${src}" destdir="${waters.classes}" 
           includes="net/sourceforge/waters/build/jniglue/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath refid="external-classpath"/>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="jniglue-jar" depends="jniglue-compile">
    <jar jarfile="${jniglue.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/build/jniglue/*.class"/>
      </fileset>
    </jar>
  </target>

  <target name="jniglue" depends="jniglue-jar,waters-jar"
          description="Create JNI Glue C++ files.">
    <mkdir dir="${jniglue.outdir}"/>
    <java classname="net.sourceforge.waters.build.jniglue.GlueCompiler"
          fork="true" failonerror="true">
      <classpath>
        <pathelement location="${jaxb.jar}"/>
        <pathelement location="${jniglue.jar}"/>
        <pathelement location="${waters.jar}"/>
        <path refid="external-classpath"/>
      </classpath>
      <arg file="${jniglue.indir}"/>
      <arg file="${jniglue.outdir}"/>
      <arg file="${supremica.src}"/>
      <arg file="${jniglue.jar}"/>
    </java> 
  </target>

  <target name="cpp" depends="javah,jniglue"
          description="Build native library.">
    <exec executable="make" dir="${cpp}" failonerror="true"/>
  </target>

  <target name="waters" depends="waters-jar,cpp"
          description="Build all Waters executables."/>

  <target name="test-compile" depends="waters-jar,cpp">
    <mkdir dir="${test.classes}"/>
    <javac srcdir="${supremica.testsrc}" destdir="${test.classes}" 
           includes="net/sourceforge/waters/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath>
        <path refid="external-classpath"/>
        <pathelement location="${jaxb.jar}"/>
        <pathelement location="${waters.jar}"/>
      </classpath>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="test-jar" depends="test-compile">
    <jar jarfile="${test.jar}">
      <fileset dir="${test.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
      </fileset>
    </jar>
  </target>

  <target name="test" depends="test-jar"
          description="Run the test cases.">
    <mkdir dir="${logs}/model/analysis"/>
    <mkdir dir="${logs}/model/compiler"/>
    <mkdir dir="${logs}/model/expr"/>
    <mkdir dir="${logs}/plain/des"/>
    <mkdir dir="${logs}/plain/module"/>
    <mkdir dir="${logs}/samples/algorithms"/>
    <mkdir dir="${logs}/samples/maze"/>
    <mkdir dir="${logs}/subject/module"/>
    <mkdir dir="${logs}/valid"/>
    <junit printsummary="on" fork="true">
      <formatter type="brief" extension=".log"/>
      <test name="net.sourceforge.waters.plain.des.PlainProductDESTest"
            todir="${logs}/plain/des"/>
      <test name="net.sourceforge.waters.plain.module.PlainModuleTest"
            todir="${logs}/plain/module"/>
      <test name="net.sourceforge.waters.subject.module.SubjectModuleTest"
            todir="${logs}/subject/module"/>
      <test name="net.sourceforge.waters.model.expr.ExpressionTest"
            todir="${logs}/model/expr"/>
      <test name="net.sourceforge.waters.model.compiler.CompilerTest"
            todir="${logs}/model/compiler"/>
      <test name="net.sourceforge.waters.model.analysis.AnalysisTest"
            todir="${logs}/model/analysis"/>
      <test name="net.sourceforge.waters.valid.ValidTest"
            todir="${logs}/valid"/>
      <test name="net.sourceforge.waters.samples.maze.MazeTest"
            todir="${logs}/samples/maze"/>
      <test name="net.sourceforge.waters.samples.algorithms.AlgorithmsTest"
            todir="${logs}/samples/algorithms"/>
      <classpath>
        <path refid="external-classpath"/>
        <pathelement location="${jaxb.jar}"/>
        <pathelement location="${waters.jar}"/>
        <pathelement location="${test.jar}"/>
      </classpath>
      <sysproperty key="waters.test.inputdir" value="${examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs}"/>
      <env key="LD_LIBRARY_PATH" path="${cpplib}"/>
    </junit>
  </target>

  <target name="doc" depends="jaxb-generate"
          description="Generate Javadoc documentation.">
    <mkdir dir="${javadoc}"/>
    <javadoc destdir="${javadoc}">
      <packageset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*"/>
        <exclude name="net/sourceforge/waters/xsd/*/impl/**"/>
      </packageset>
      <packageset dir="${supremica.src}">
        <include name="net/sourceforge/waters/**"/>
        <exclude name="net/sourceforge/waters/analysis/**"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
        <exclude name="net/sourceforge/waters/model/analysis/**"/>
        <exclude name="net/sourceforge/waters/model/oldcompiler/**"/>
        <exclude name="net/sourceforge/waters/newmodel/**"/>
        <exclude name="net/sourceforge/waters/oldmodel/**"/>
      </packageset>
      <doctitle><![CDATA[<h1>Waters API Documentation</h1>]]></doctitle>
      <link href="${java.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/j2sdk"/>
      <link href="${jaxme.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/jaxme"/>
      <link href="${junit.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/junit"/>
      <classpath>
        <path refid="external-classpath"/>
        <pathelement location="${junit.jar}"/>
      </classpath>
    </javadoc>
  </target>

  <target name="www" depends="doc"
          description="Install javadocs on local web server.">
    <delete dir="${javadoc.targetdir}"/>
    <copy todir="${javadoc.targetdir}">
      <fileset dir="${javadoc}"/>
    </copy>
  </target>

  <target name="clean" description="Clean up.">
    <delete dir="${src}/net/sourceforge/waters/xsd/"/>
    <delete dir="${classes}"/>
    <delete dir="${jar}"/>
    <delete dir="${javadoc}"/>
    <delete dir="${javah.dir}"/>
    <delete dir="${jniglue.outdir}"/>
    <exec executable="make" dir="${cpp}">
      <arg value="clean"/>
    </exec>
  </target>

</project>
