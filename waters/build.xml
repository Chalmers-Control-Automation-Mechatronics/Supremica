<!-- -*- indent-tabs-mode: nil -*- -->

<project name="waters" default="waters">
  <description>
  </description>

  <property file="build.properties"/>
  <property name="supremica.root" location=".."/>
  <property name="supremica.lib" location="${supremica.root}/lib"/>
  <property name="supremica.src" location="${supremica.root}/src"/>
  <property name="supremica.testsrc" location="${supremica.root}/tests/src"/>

  <property name="anarres.jar" location="${supremica.lib}/anarres-cpp.jar"/>
  <property name="javabdd.jar" location="${supremica.lib}/javabdd-2.0.jar"/>
  <property name="jaxb-api.jar" location="${supremica.lib}/jaxb-api.jar"/>
  <property name="jaxb-core.jar" location="${supremica.lib}/jaxb-core.jar"/>
  <property name="jaxb-impl.jar" location="${supremica.lib}/jaxb-impl.jar"/>
  <property name="jaxb-jxc.jar" location="${supremica.lib}/jaxb-jxc.jar"/>
  <property name="jaxb-xjc.jar" location="${supremica.lib}/jaxb-xjc.jar"/>
  <property name="log4j-api.jar"
            location="${supremica.lib}/log4j-api-2.9.0.jar"/>
  <property name="log4j-core.jar"
            location="${supremica.lib}/log4j-core-2.9.0.jar"/>
  <property name="junit.jar" location="${supremica.lib}/junit.jar"/>
  <property name="trove.jar" location="${supremica.lib}/trove-3.0.3.jar"/>

  <path id="jaxb.classpath">
    <pathelement location="${jaxb-api.jar}"/>
    <pathelement location="${jaxb-core.jar}"/>
    <pathelement location="${jaxb-impl.jar}"/>
  </path>

  <property name="bddlib" location="${supremica.root}/dist"/>
  <property name="classes" location="java/classes"/>
  <property name="cpp" location="cpp"/>
  <property name="docsrc" location="java/javadoc"/>
  <property name="supremica.examples" location="${supremica.root}/examples"/>
  <property name="waters.examples" location="${supremica.examples}/waters"/>
  <property name="jar" location="java/jar"/>
  <property name="javadoc" location="java/docs"/>
  <property name="logs" location="logs"/>
  <property name="logs.reports" location="${logs}/reports"/>
  <property name="logs.results" location="${logs}/results"/>
  <property name="src" location="java/src"/>
  <property name="tmp" location="tmp"/>
  <property name="xml" location="xml"/>
  <property name="xsd" location="${xml}/xsd"/>
  <property name="xsl" location="${xml}/xsl"/>

  <property name="javah.dir" location="${cpp}/src/waters/javah"/>
  <property name="javah.file" location="${javah.dir}/Invocations.h"/>
  <property name="jaxb.jar" location="${jar}/waters_jaxb.jar"/>
  <property name="jniglue.indir" location="${cpp}/src/jni/templates"/>
  <property name="jniglue.outdir" location="${cpp}/src/jni/glue"/>
  <property name="jniglue.jar" location="${jar}/jniglue.jar"/>
    
  <property name="test.jar" location="${jar}/waters_test.jar"/>
  <property name="test.classes" location="${classes}/test"/>
  <property name="waters.jar" location="${jar}/waters.jar"/>
  <property name="waters.classes" location="${classes}/waters"/>

  <property name="javadoc552" location="java/docs552"/>
  <property name="waters552.jar" location="${jar}/waters552.jar"/>

  <path id="waters.compile.classpath">
    <path refid="jaxb.classpath"/>
    <pathelement location="${jaxb.jar}"/>
    <pathelement location="${javabdd.jar}"/>
    <pathelement location="${log4j-api.jar}"/>
    <pathelement location="${log4j-core.jar}"/>
    <pathelement location="${trove.jar}"/>
  </path>

  <path id="waters.test.classpath">
    <path refid="waters.compile.classpath"/>
    <pathelement location="${waters.jar}"/>
    <pathelement location="${test.jar}"/>
    <pathelement location="${junit.jar}"/>
  </path>

  <property name="junit.maxmemory" value="2048m"/>


  <target name="init">
    <mkdir dir="${classes}"/>
    <mkdir dir="${jar}"/>
  </target>

  <target name="jaxb-generate" depends="init">
    <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
      <classpath>
        <path refid="jaxb.classpath"/>
        <pathelement location="${jaxb-xjc.jar}"/>
      </classpath>
    </taskdef>
    <delete dir="${tmp}" quiet="true"/>
    <mkdir dir="${tmp}"/>
    <xjc destdir="${tmp}" extension="true" removeOldOutput="yes">
      <schema dir="${xsd}" includes="waters-des.xsd waters-module.xsd"/>
      <produces dir="${src}/net/sourceforge/waters/xsd/"
                includes="base/* base/impl/* des/* des/impl/*
                          module/* module/impl/*"/>
    </xjc>
    <!-- Remove "* <p>" lines from generated code - avoid javadoc warnings -->
    <copy todir="${src}">
      <fileset dir="${tmp}">
        <include name="**/*.java"/>
      </fileset>
      <filterchain>
        <linecontainsregexp negate="true">
          <regexp pattern="^ *\* *&lt;p&gt; *$"/>
        </linecontainsregexp>
      </filterchain>
    </copy>
    <delete dir="${tmp}"/>
  </target>

  <target name="jaxb-compile" depends="jaxb-generate">
    <mkdir dir="${waters.classes}"/>
    <javac srcdir="${src}" destdir="${waters.classes}"
           includes="net/sourceforge/waters/xsd/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}"
           includeantruntime="false">
      <classpath refid="jaxb.classpath"/>
    </javac>
  </target>

  <target name="jaxb-jar" depends="jaxb-compile"
          description="Create the waters_jaxb.jar archive.">
    <jar jarfile="${jaxb.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/xsd/**/*.class"/>
      </fileset>
      <fileset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*.properties"/>
        <include name="net/sourceforge/waters/xsd/**/*.ser"/>
       </fileset>
    </jar>
  </target>

  <target name="waters-compile" depends="jaxb-jar">
    <mkdir dir="${waters.classes}"/>
    <javac sourcepath="" srcdir="${supremica.src}" destdir="${waters.classes}" 
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}"
           includeantruntime="false">
      <classpath refid="waters.compile.classpath"/>
      <compilerarg value="-Xlint:unchecked"/>
      <compilerarg value="-Xlint:deprecation"/>
      <include name="net/sourceforge/waters/**/*.java"/>
      <exclude name="net/sourceforge/waters/analysis/efa/simple/**/*.java"/>
      <exclude name="net/sourceforge/waters/gui/**/*.java"/>
      <include name="org/supremica/log/**/*.java"/>
   </javac>
  </target>

  <target name="waters-jar" depends="waters-compile">
    <copy file="${xsl}/vw.xsl"
          todir="${waters.classes}/net/sourceforge/waters/external/valid"/>
    <copy todir="${waters.classes}/net/sourceforge/waters/model/marshaller">
      <fileset dir="${xsd}" includes="*.xsd"/>
    </copy>
    <copy todir="${waters.classes}/net/sourceforge/waters/samples/maze">
      <fileset dir="${waters.examples}/maze" includes="*.wmod"/>
    </copy>
    <jar jarfile="${waters.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
        <include name="net/sourceforge/waters/**/*.wmod"/>
        <include name="net/sourceforge/waters/**/*.xsd"/>
        <include name="net/sourceforge/waters/**/*.xsl"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
        <exclude name="net/sourceforge/waters/xsd/**"/>
        <include name="org/supremica/log/**"/>
      </fileset>
    </jar>
  </target>

  <target name="jar552" depends="waters-compile">
    <copy file="${xsl}/vw.xsl"
          todir="${waters.classes}/net/sourceforge/waters/external/valid"/>
    <copy todir="${waters.classes}/net/sourceforge/waters/model/marshaller">
      <fileset dir="${xsd}" includes="*.xsd"/>
    </copy>
    <jar jarfile="${waters552.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
        <include name="net/sourceforge/waters/**/*.xsd"/>
        <include name="net/sourceforge/waters/**/*.xsl"/>
        <exclude name="net/sourceforge/waters/analysis/bdd/**"/>
        <exclude name="net/sourceforge/waters/analysis/comp552/**"/>
        <exclude name="net/sourceforge/waters/analysis/distributed/**"/>
        <exclude name="net/sourceforge/waters/analysis/po/**"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
        <exclude name="net/sourceforge/waters/samples/**"/>
      </fileset>
    </jar>
    <jar jarfile="${waters552.jar}" update="true">
      <fileset dir="${waters.classes}">
        <include
           name="net/sourceforge/waters/analysis/comp552/ModelChecker.class"/>
        <include
           name="net/sourceforge/waters/analysis/comp552/ConflictCounterExampleChecker.class"/>
        <include
           name="net/sourceforge/waters/analysis/comp552/ControllabilityCounterExampleChecker.class"/>
      </fileset>
    </jar>
  </target>

  <target name="javah" depends="waters-compile,test-compile"
          if="native.make" description="Create JNI headers.">
    <mkdir dir="${javah.dir}"/>
    <javah outputFile="${javah.file}">
      <classpath> 
        <pathelement location="${waters.classes}"/>
        <pathelement location="${test.classes}"/>
        <pathelement location="${junit.jar}"/>
      </classpath>
      <class name="net.sourceforge.waters.cpp.analysis.NativeBitSet"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeConflictChecker"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeControlLoopChecker"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeDeadlockChecker"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeHashSet"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeModelAnalyzer"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeSafetyVerifier"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeStateCounter"/>
      <class name="net.sourceforge.waters.cpp.analysis.NativeWordSizeTest"/>
    </javah>
  </target>

  <target name="jniglue-compile">
    <mkdir dir="${waters.classes}"/>
    <javac srcdir="${src}" destdir="${waters.classes}" 
           includes="net/sourceforge/waters/build/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}"
           includeantruntime="false">
      <classpath refid="waters.compile.classpath"/>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="jniglue-jar" depends="jniglue-compile">
    <jar jarfile="${jniglue.jar}">
      <fileset dir="${waters.classes}">
        <include name="net/sourceforge/waters/build/**/*.class"/>
      </fileset>
    </jar>
  </target>

  <target name="jniglue" depends="jniglue-jar,waters-jar"
          if="native.make" description="Create JNI Glue C++ files.">
    <mkdir dir="${jniglue.outdir}"/>
    <java classname="net.sourceforge.waters.build.jniglue.GlueCompiler"
          fork="true" failonerror="true">
      <classpath>
        <pathelement location="${jniglue.jar}"/>
        <pathelement location="${waters.jar}"/>
        <path refid="waters.compile.classpath"/>
      </classpath>
      <arg file="${jniglue.indir}"/>
      <arg file="${jniglue.outdir}"/>
      <arg file="${supremica.src}"/>
      <arg file="${jniglue.jar}"/>
    </java> 
  </target>

  <target name="-guess-host-arch" unless="native.host.arch">
    <property name="native.host.arch" value="${native.ostype}"/>
    <property name="cpp.lib.dir" location="${cpp}/lib/${native.host.arch}"/>
  </target>

  <target name="-guess-target-arch" unless="native.target.arch"
          depends="-guess-host-arch">
    <property name="native.target.arch" value="${native.host.arch}"/>
  </target>

  <target name="-set-debug" unless="make.release">
    <property name="cpp.debug.suffix" value=".debug"/>
    <property name="cpp.debug" value="1"/>
  </target>

  <target name="-set-ccpp" if="native.compiler.${native.target.arch}">
    <propertycopy name="cpp.ccpp"
                  from="native.compiler.${native.target.arch}"/>
  </target>

  <target name="cpp"
      depends="-guess-host-arch,-guess-target-arch,-set-debug,-set-ccpp,javah,jniglue"
      if="native.make" description="Builds Waters dynamic link library.">
    <property name="cpp.ccpp" value=""/>
    <exec executable="${native.make}" dir="${cpp}"
          failonerror="true" failifexecutionfails="false">
      <arg value="HOST_ARCH=${native.host.arch}"/>
      <arg value="TARGET_ARCH=${native.target.arch}"/>
      <arg value="CCPP=${cpp.ccpp}"/>
      <arg value="DEBUG=${cpp.debug}"/>
    </exec>
    <pathconvert property="waters.library.path">
      <path>
        <pathelement location="${cpp.lib.dir}${cpp.debug.suffix}"/>
        <pathelement location="${bddlib}"/>
        <pathelement path="${java.library.path}"/>
      </path>
    </pathconvert>
  </target>

  <target name="waters" depends="waters-jar,cpp"
          description="Build all Waters executables."/>

  <target name="test-compile" depends="waters-jar">
    <mkdir dir="${test.classes}"/>
    <javac srcdir="${supremica.testsrc}" destdir="${test.classes}" 
           includes="net/sourceforge/waters/**/*.java"
           excludes="net/sourceforge/waters/gui/**/*.java"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}"
               includeantruntime="false">
      <classpath>
        <path refid="waters.compile.classpath"/>
        <pathelement location="${waters.jar}"/>
        <pathelement location="${junit.jar}"/>
      </classpath>
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="test-jar" depends="test-compile">
    <jar jarfile="${test.jar}">
      <fileset dir="${test.classes}">
        <include name="net/sourceforge/waters/**/*.class"/>
      </fileset>
      <zipfileset dir="${waters.examples}"
                  prefix="net/sourceforge/waters/model/marshaller/examples"/>
    </jar>
  </target>

  <target name="runtest" depends="test-jar,cpp">
    <mkdir dir="${logs.results}"/>
    <junit printsummary="on" fork="true" maxmemory="${junit.maxmemory}">
      <formatter type="xml"/>
      <batchtest todir="${logs.results}">
        <fileset dir="${supremica.testsrc}">
          <include name="net/sourceforge/waters/**/*Test.java"/>
          <exclude name="net/sourceforge/waters/gui/**/*.java"/>
          <exclude name="net/sourceforge/waters/analysis/**/*HeuristicTest.java"/>
          <exclude name="net/sourceforge/waters/analysis/monolithic/MonolithicCliqueBasedSupervisorReductionTest.java"/>
          <exclude name="net/sourceforge/waters/analysis/monolithic/MonolithicSupervisorLocalizationTest.java"/>
          <exclude name="net/sourceforge/waters/analysis/monolithic/MonolithicSynthesizerNormalityTest.java"/>
          <exclude name="net/sourceforge/waters/analysis/distributed/**/*.java"/>
          <exclude name="**/Abstract*.java"/>
          <exclude name="**/Large*.java"/>
          <exclude name="**/Native*.java"/>
        </fileset>
      </batchtest>
      <batchtest todir="${logs.results}" if="native.make">
        <fileset dir="${supremica.testsrc}">
          <include name="**/Native*Test.java"/>
        </fileset>
      </batchtest>
      <classpath refid="waters.test.classpath"/>
      <sysproperty key="waters.test.inputdir" value="${supremica.examples}"/>
      <sysproperty key="waters.test.outputdir" value="${logs.results}"/>
      <sysproperty key="waters.test.ant" value="true"/>
      <sysproperty key="java.library.path" value="${waters.library.path}"/>
      <jvmarg value="-enableassertions"/>
    </junit>
  </target>

  <target name="test-report">
    <mkdir dir="${logs.reports}"/>
    <junitreport todir="${logs.reports}">
      <fileset dir="${logs.results}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${logs.reports}"/>
    </junitreport>
  </target>

  <target name="test" depends="runtest,test-report"
          description="Run the test cases."/>

  <target name="doc" depends="jaxb-generate"
          description="Generate Javadoc documentation.">
    <delete dir="${javadoc}"/>
    <mkdir dir="${javadoc}"/>
    <javadoc destdir="${javadoc}"
             windowtitle="Waters API"
             additionalparam="-Xdoclint:all,-missing">
      <packageset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*"/>
        <exclude name="net/sourceforge/waters/xsd/*/impl/**"/>
      </packageset>
      <packageset dir="${supremica.src}">
        <include name="net/sourceforge/waters/**"/>
        <exclude name="net/sourceforge/waters/analysis/efa/simple/**"/>
        <exclude name="net/sourceforge/waters/build/**"/>
        <exclude name="net/sourceforge/waters/gui/**"/>
      </packageset>
      <doctitle><![CDATA[<h1>Waters API Documentation</h1>]]></doctitle>
      <link href="${java.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/j2sdk"/>
      <link href="${javabdd.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/javabdd"/>
      <link href="${jaxme.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/jaxme"/>
      <link href="${junit.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/junit"/>
      <classpath refid="waters.test.classpath"/>
    </javadoc>
  </target>

  <target name="doc552" depends="jaxb-generate"
          description="Generate Javadoc documentation.">
    <delete dir="${javadoc552}"/>
    <mkdir dir="${javadoc552}/src"/>
    <copy todir="${javadoc552}/src">
      <fileset dir="${supremica.src}">
        <exclude name="net/sourceforge/waters/analysis/**"/>
        <include name="net/sourceforge/waters/model/**"/>
        <exclude name="net/sourceforge/waters/model/analysis/**"/>
        <include name="net/sourceforge/waters/plain/**"/>
        <include name="net/sourceforge/waters/external/valid/**"/>
      </fileset>
    </copy>
    <copy todir="${javadoc552}/src">
      <fileset dir="${supremica.src}">
        <include
          name="net/sourceforge/waters/model/analysis/AnalysisException.java"/>
        <include name="net/sourceforge/waters/analysis/comp552/Conflict*.java"/>
        <include
          name="net/sourceforge/waters/analysis/comp552/Controllability*.java"/>
        <include
          name="net/sourceforge/waters/analysis/comp552/ModelChecker.java"/>
        <exclude name="net/sourceforge/waters/analysis/comp552/*Assess.java"/>
      </fileset>
    </copy>
    <javadoc destdir="${javadoc552}"
             windowtitle="Waters API"
             additionalparam="-Xdoclint:all,-missing">
      <packageset dir="${src}">
        <include name="net/sourceforge/waters/xsd/**/*"/>
        <exclude name="net/sourceforge/waters/xsd/*/impl/**"/>
      </packageset>
      <packageset dir="${javadoc552}/src"/>
      <doctitle><![CDATA[<h1>Waters API Documentation</h1>]]></doctitle>
      <link href="${java.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/j2sdk"/>
      <link href="${javabdd.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/javabdd"/>
      <link href="${jaxme.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/jaxme"/>
      <link href="${junit.api.url}"
            offline="true" packagelistLoc="${docsrc}/offline/junit"/>
      <classpath refid="waters.test.classpath"/>
    </javadoc>
    <delete dir="${javadoc552}/src"/>
  </target>

  <target name="www" depends="doc"
          description="Install javadocs on local web server.">
    <delete dir="${javadoc.targetdir}"/>
    <copy todir="${javadoc.targetdir}">
      <fileset dir="${javadoc}"/>
    </copy>
  </target>


  <target name="-clean-cpp" depends="-guess-host-arch" if="native.make">
    <exec executable="${native.make}" dir="${cpp}"
          failifexecutionfails="false">
      <arg value="HOST_ARCH=${native.host.arch}"/>
      <arg value="clean"/>
    </exec>
  </target>

  <target name="clean" description="Clean up." depends="-clean-cpp">
    <delete dir="${src}/net/sourceforge/waters/xsd/"/>
    <delete dir="${classes}"/>
    <delete dir="${logs}"/>
    <delete dir="${jar}"/>
    <delete dir="${javadoc}"/>
    <delete dir="${javah.dir}"/>
    <delete dir="${jniglue.outdir}"/>
  </target>

</project>
