// -*- Java -*-
//###########################################################################
//# Copyright (C) 2004-2015 Robi Malik
//###########################################################################
//# This file is part of Waters.
//# Waters is free software: you can redistribute it and/or modify it under
//# the terms of the GNU General Public License as published by the Free
//# Software Foundation, either version 2 of the License, or (at your option)
//# any later version.
//# Waters is distributed in the hope that it will be useful, but WITHOUT ANY
//# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
//# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
//# details.
//# You should have received a copy of the GNU General Public License along
//# with Waters. If not, see <http://www.gnu.org/licenses/>.
//#
//# Linking Waters statically or dynamically with other modules is making a
//# combined work based on Waters. Thus, the terms and conditions of the GNU
//# General Public License cover the whole combination.
//# In addition, as a special exception, the copyright holders of Waters give
//# you permission to combine Waters with code included in the standard
//# release of Supremica under the Supremica Software License Agreement (or
//# modified versions of such code, with unchanged license). You may copy and
//# distribute such a system following the terms of the GNU GPL for Waters and
//# the licenses of the other code concerned.
//# Note that people who make modified versions of Waters are not obligated to
//# grant this special exception for their modified versions; it is their
//# choice whether to do so. The GNU General Public License gives permission
//# to release a modified version without this exception; this exception also
//# makes it possible to release a modified version which carries forward this
//# exception.
//###########################################################################


//###########################################################################
package java.lang;
//###########################################################################

ref class Class {}

ref class IllegalArgumentException {}

ref class NullPointerException {}

glue class Exception {}


//###########################################################################
package java.net;
//###########################################################################

ref class URI {}


//###########################################################################
package java.nio;
//###########################################################################

ref class ByteBuffer {}


//###########################################################################
package java.util;
//###########################################################################

glue class Iterator {
  boolean hasNext();
  Object next();
}

glue class Collection {
  int size();
  boolean contains(glue Object element);
  glue Iterator iterator();
}

glue class List extends Collection {
  boolean add(glue Object element);
  boolean addAll(glue Collection elements);
  void add(int index, glue Object element);
}

glue class Set extends Collection {}

glue class Map {
  void clear();
  Object put(glue Object key, glue Object value);
}

glue class Collections {
  static glue List emptyList();
  static glue Set emptySet();
}

glue class LinkedList extends List {
  LinkedList();
}

glue class HashMap extends Map {
  HashMap();
  HashMap(int initialCapacity);
}

glue class TreeSet extends Set {
  TreeSet();
  TreeSet(glue Collection c);
}


//###########################################################################
package net.sourceforge.waters.xsd.base;
//###########################################################################

enum class ComponentKind {PLANT, SPEC, PROPERTY, SUPERVISOR}

enum class EventKind {PROPOSITION, UNCONTROLLABLE, CONTROLLABLE}


//###########################################################################
package net.sourceforge.waters.xsd.des;
//###########################################################################

enum class ConflictKind {CONFLICT, DEADLOCK, LIVELOCK}


//###########################################################################
package net.sourceforge.waters.model.base;
//###########################################################################

glue class NamedProxy {
  String getName();
  int compareTo(glue Object partner);
}


//###########################################################################
package net.sourceforge.waters.model.des;
//###########################################################################

glue class EventProxy extends NamedProxy {
  glue EventKind getKind();
}

glue class StateProxy extends NamedProxy {
  boolean isInitial();
  glue Collection getPropositions();
}

glue class TransitionProxy {
  glue StateProxy getSource();
  glue StateProxy getTarget();
  glue EventProxy getEvent();
}

glue class AutomatonProxy extends NamedProxy {
  glue ComponentKind getKind();
  glue Set getEvents();
  glue Set getStates();
  glue Collection getTransitions();
}

glue class ProductDESProxy extends NamedProxy {
  glue Set getEvents();
  glue Set getAutomata();
}

glue class TraceProxy {
}

glue class TraceStepProxy {
}

glue class SafetyTraceProxy extends TraceProxy {
}

glue class ConflictTraceProxy extends TraceProxy {
}

glue class LoopTraceProxy extends TraceProxy {
}

glue class ProductDESProxyFactory {
  glue AutomatonProxy createAutomatonProxy(String name,
                                           glue ComponentKind kind,
                                           glue Collection events,
                                           glue Collection states,
                                           glue Collection transitions);
  glue ConflictTraceProxy createConflictTraceProxy(String name,
                                                   glue ProductDESProxy des,
                                                   glue List events,
                                                   glue ConflictKind kind);
  glue ConflictTraceProxy createConflictTraceProxy(String name,
                                                   String comment,
                                                   URI location,
                                                   glue ProductDESProxy des,
                                                   glue Collection automata,
                                                   glue List steps,
                                                   glue ConflictKind kind);
  glue LoopTraceProxy createLoopTraceProxy(String name,
					   String comment,
					   URI location,
					   glue ProductDESProxy des,
					   glue Collection automata,
					   glue List steps,
					   int index);
  glue EventProxy createEventProxy(String name, glue EventKind kind);
  glue ProductDESProxy createProductDESProxy(String name,
                                             glue Collection events,
                                             glue Collection automata);
  glue ProductDESProxy createProductDESProxy(String name);
  glue SafetyTraceProxy createSafetyTraceProxy(String name,
                                               glue ProductDESProxy des,
                                               glue List events);
  glue SafetyTraceProxy createSafetyTraceProxy(String name,
                                               String comment,
                                               URI location,
                                               glue ProductDESProxy des,
                                               glue Collection automata,
                                               glue List steps);
  glue TraceStepProxy createTraceStepProxy(glue EventProxy event);
  glue TraceStepProxy createTraceStepProxy(glue EventProxy event,
                                           glue Map statemap);
}


//###########################################################################
package net.sourceforge.waters.model.analysis;
//###########################################################################

glue class VerificationResult {
  void setSatisfied(boolean satisfied);
  void setCounterExample(glue TraceProxy trace);
  void updatePeakMemoryUsage(long usage);
  void setNumberOfAutomata(int numaut);
  void setNumberOfStates(double numstates);
  void setNumberOfTransitions(double numtrans);
  void setPeakNumberOfNodes(int numnodes);
  void setTotalNumberOfEvents(int numEvents);
}

glue class KindTranslator {
  glue ComponentKind getComponentKind(glue AutomatonProxy aut);
  glue EventKind getEventKind(glue EventProxy event);
}

glue class AnalysisAbortException extends Exception {
  AnalysisAbortException();
}

glue class AnalysisConfigurationException extends Exception {
  AnalysisConfigurationException(String msg);
}

enum class OverflowKind {STATE, TRANSITION, NODE, MEMORY}

glue class OverflowException extends Exception {
  OverflowException(glue OverflowKind kind);
  OverflowException(glue OverflowKind kind, int limit);
}


//###########################################################################
package net.sourceforge.waters.model.analysis.des;
//###########################################################################

glue class EventNotFoundException extends Exception {
  EventNotFoundException(glue NamedProxy container, String name);
}

glue class NondeterministicDESException extends Exception {
  NondeterministicDESException(glue AutomatonProxy aut, glue StateProxy state);
  NondeterministicDESException(glue AutomatonProxy aut,
                               glue StateProxy state,
                               glue EventProxy event);
}


//###########################################################################
package net.sourceforge.waters.cpp.analysis;
//###########################################################################

enum class ConflictCheckMode {
  STORED_BACKWARDS_TRANSITIONS,
  COMPUTED_BACKWARDS_TRANSITIONS,
  NO_BACKWARDS_TRANSITIONS
}

glue class NativeVerificationResult extends VerificationResult {
  void setEncodingSize(int value);
  void setNumberOfExploredTransitions(double value);
  void setTarjanComponentCount(int value);
  void setTarjanControlStackHeight(int value);
  void setTarjanComponentStackHeight(int value);
}

glue class NativeModelAnalyzer {
  glue ProductDESProxyFactory getFactory();
  glue ProductDESProxy getModel();
  glue KindTranslator getKindTranslator();
  int getNodeLimit();
  int getTransitionLimit();
  boolean isEventTreeEnabled();
  ByteBuffer getNativeModelAnalyzer();
  void setNativeModelAnalyzer(ByteBuffer buffer);
}

glue class NativeModelVerifier extends NativeModelAnalyzer {
  String getTraceName();
  glue NativeVerificationResult createAnalysisResult();
}

glue class NativeSafetyVerifier extends NativeModelVerifier {
  boolean isInitialUncontrollable();
  String getTraceComment(glue EventProxy event,
                         glue AutomatonProxy aut,
                         glue StateProxy state);
}

glue class NativeConflictChecker extends NativeModelVerifier {
  glue EventProxy getUsedDefaultMarking();
  glue EventProxy getConfiguredPreconditionMarking();
  glue ConflictCheckMode getConflictCheckMode();
  boolean isDumpStateAware();
}

glue class NativeControlLoopChecker extends NativeModelVerifier {
}
