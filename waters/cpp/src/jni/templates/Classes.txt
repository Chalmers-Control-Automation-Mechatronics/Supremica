// -*- Java -*-
//###########################################################################
//# PROJECT: Waters
//# PACKAGE: jni.glue
//# PURPOSE: List of classes and methods to be converted to C++/JNI code
//###########################################################################
//# $Id$
//###########################################################################


//###########################################################################
package java.lang;
//###########################################################################

ref class Class {}

ref class IllegalArgumentException {}

ref class NullPointerException {}

glue class Exception {}


//###########################################################################
package java.net;
//###########################################################################

ref class URI {}


//###########################################################################
package java.nio;
//###########################################################################

ref class ByteBuffer {}


//###########################################################################
package java.util;
//###########################################################################

glue class Iterator {
  boolean hasNext();
  Object next();
}

glue class Collection {
  int size();
  boolean contains(glue Object element);
  glue Iterator iterator();
}

glue class List extends Collection {
  boolean add(glue Object element);
  void add(int index, glue Object element);
}

glue class Set extends Collection {}

glue class Map {
  void clear();
  Object put(glue Object key, glue Object value);
}

glue class Collections {
  static glue List emptyList();
  static glue Set emptySet();
}

glue class LinkedList extends List {
  LinkedList();
}

glue class HashMap extends Map {
  HashMap();
  HashMap(int initialCapacity);
}

glue class TreeSet extends Set {
  TreeSet();
  TreeSet(glue Collection c);
}


//###########################################################################
package net.sourceforge.waters.xsd.base;
//###########################################################################

enum class ComponentKind {PLANT, SPEC, PROPERTY, SUPERVISOR}

enum class EventKind {PROPOSITION, UNCONTROLLABLE, CONTROLLABLE}


//###########################################################################
package net.sourceforge.waters.xsd.des;
//###########################################################################

enum class ConflictKind {CONFLICT, DEADLOCK, LIVELOCK}


//###########################################################################
package net.sourceforge.waters.model.base;
//###########################################################################

glue class NamedProxy {
  String getName();
  int compareTo(glue Object partner);
}


//###########################################################################
package net.sourceforge.waters.model.des;
//###########################################################################

glue class EventProxy extends NamedProxy {
  glue EventKind getKind();
}

glue class StateProxy extends NamedProxy {
  boolean isInitial();
  glue Collection getPropositions();
}

glue class TransitionProxy {
  glue StateProxy getSource();
  glue StateProxy getTarget();
  glue EventProxy getEvent();
}

glue class AutomatonProxy extends NamedProxy {
  glue ComponentKind getKind();
  glue Set getEvents();
  glue Set getStates();
  glue Collection getTransitions();
}

glue class ProductDESProxy extends NamedProxy {
  glue Set getEvents();
  glue Set getAutomata();
}

glue class TraceProxy {
}

glue class TraceStepProxy {
}

glue class SafetyTraceProxy extends TraceProxy {
}

glue class ConflictTraceProxy extends TraceProxy {
}

glue class ProductDESProxyFactory {
  glue AutomatonProxy createAutomatonProxy(String name,
					   glue ComponentKind kind,
					   glue Collection events,
					   glue Collection states,
					   glue Collection transitions);
  glue ConflictTraceProxy createConflictTraceProxy(String name,
						   glue ProductDESProxy des,
						   glue List events,
						   glue ConflictKind kind);
  glue ConflictTraceProxy createConflictTraceProxy(String name,
						   String comment,
						   URI location,
						   glue ProductDESProxy des,
						   glue Collection automata,
						   glue List steps,
						   glue ConflictKind kind);
  glue EventProxy createEventProxy(String name, glue EventKind kind);
  glue ProductDESProxy createProductDESProxy(String name,
					     glue Collection events,
					     glue Collection automata);
  glue ProductDESProxy createProductDESProxy(String name);
  glue SafetyTraceProxy createSafetyTraceProxy(String name,
					       glue ProductDESProxy des,
					       glue List events);
  glue SafetyTraceProxy createSafetyTraceProxy(String name,
					       String comment,
					       URI location,
					       glue ProductDESProxy des,
					       glue Collection automata,
					       glue List steps);
  glue TraceStepProxy createTraceStepProxy(glue EventProxy event);
  glue TraceStepProxy createTraceStepProxy(glue EventProxy event,
					   glue Map statemap);
}


//###########################################################################
package net.sourceforge.waters.model.analysis;
//###########################################################################

glue class VerificationResult {
  void setSatisfied(boolean satisfied);
  void setCounterExample(glue TraceProxy trace);
  void updatePeakMemoryUsage(long usage);
  void setNumberOfAutomata(int numaut);
  void setNumberOfStates(double numstates);
  void setNumberOfTransitions(double numtrans);
  void setPeakNumberOfNodes(int numnodes);
}

glue class KindTranslator {
  glue ComponentKind getComponentKind(glue AutomatonProxy aut);
  glue EventKind getEventKind(glue EventProxy event);
}

glue class AbortException extends Exception {
  AbortException();
}

glue class EventNotFoundException extends Exception {
  EventNotFoundException(glue NamedProxy container, String name);
}

glue class NondeterministicDESException extends Exception {
  NondeterministicDESException(glue AutomatonProxy aut, glue StateProxy state);
  NondeterministicDESException(glue AutomatonProxy aut,
			       glue StateProxy state,
			       glue EventProxy event);
}

enum class OverflowKind {STATE, TRANSITION, NODE, MEMORY}

glue class OverflowException extends Exception {
  OverflowException(glue OverflowKind kind);
  OverflowException(glue OverflowKind kind, int limit);
}


//###########################################################################
package net.sourceforge.waters.cpp.analysis;
//###########################################################################

enum class ExplorerMode {BROAD, NARROW, BEST_GUESS}

glue class NativeModelAnalyzer {
  glue ProductDESProxyFactory getFactory();
  glue ProductDESProxy getModel();
  int getNodeLimit();
  int getTransitionLimit();
  ByteBuffer getNativeModelAnalyzer();
  void setNativeModelAnalyzer(ByteBuffer buffer);
}

glue class NativeModelVerifier extends NativeModelAnalyzer {
  glue ExplorerMode getExplorerMode();
  String getTraceName();
  glue VerificationResult createAnalysisResult();
}

glue class NativeSafetyVerifier extends NativeModelVerifier {
  glue KindTranslator getKindTranslator();
  boolean isInitialUncontrollable();
  String getTraceComment(glue EventProxy event,
			 glue AutomatonProxy aut,
			 glue StateProxy state);
}

glue class NativeConflictChecker extends NativeModelVerifier {
  glue EventProxy getUsedDefaultMarking();
  glue EventProxy getConfiguredPreconditionMarking();
  glue KindTranslator getKindTranslator();
}
