//# -*- indent-tabs-mode: nil -*-
//###########################################################################
//# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY A SCRIPT.
//# DO NOT EDIT.
//# Source: $INPUTFILE$
//###########################################################################
//# Copyright (C) 2004-2018 Robi Malik
//###########################################################################
//# This file is part of Waters.
//# Waters is free software: you can redistribute it and/or modify it under
//# the terms of the GNU General Public License as published by the Free
//# Software Foundation, either version 2 of the License, or (at your option)
//# any later version.
//# Waters is distributed in the hope that it will be useful, but WITHOUT ANY
//# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
//# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
//# details.
//# You should have received a copy of the GNU General Public License along
//# with Waters. If not, see <http://www.gnu.org/licenses/>.
//#
//# Linking Waters statically or dynamically with other modules is making a
//# combined work based on Waters. Thus, the terms and conditions of the GNU
//# General Public License cover the whole combination.
//# In addition, as a special exception, the copyright holders of Waters give
//# you permission to combine Waters with code included in the standard
//# release of Supremica under the Supremica Software License Agreement (or
//# modified versions of such code, with unchanged license). You may copy and
//# distribute such a system following the terms of the GNU GPL for Waters and
//# the licenses of the other code concerned.
//# Note that people who make modified versions of Waters are not obligated to
//# grant this special exception for their modified versions; it is their
//# choice whether to do so. The GNU General Public License gives permission
//# to release a modified version without this exception; this exception also
//# makes it possible to release a modified version which carries forward this
//# exception.
//###########################################################################

#ifdef __GNUG__
#pragma implementation
#endif

#include "jni/cache/ClassInfo.h"
#include "jni/cache/MethodInfo.h"
#include "jni/glue/Glue.h"


namespace jni {

//###########################################################################
//# Method Names
//###########################################################################

const char* JAVANAME__init = "<init>";
$FOREACH-PLAINMETHODNAME
const char* JAVANAME_$METHODNAME$ = "$METHODNAME";
$ENDFOR

$FOREACH-TYPESIGNATURE
const char* TYPESIG_$TYPESIGCODE$ = "$TYPESIGNATURE";
$ENDFOR


//###########################################################################
//# Method Information
//###########################################################################

$FOREACH-CLASS
$IF-HASMEMBERS
const MethodInfo METHODINFO_$CLASSNAME[] = {
$FOREACH-METHOD
  MethodInfo(METHOD_$CLASSNAME_$METHODCODENAME,
             JAVANAME_$IF-ISCONSTRUCTOR _init$ELSE $METHODNAME $ENDIF,
             TYPESIG_$TYPESIGCODE)$=
  $IF-HASFIELDS,$ELSE$COMMA$ENDIF$
$ENDFOR
$FOREACH-FIELD
  MethodInfo($INDEX,
             JAVANAME_$FIELDNAME,
             TYPESIG_$TYPESIGCODE)$COMMA$
$ENDFOR
};

$ENDIF
$ENDFOR

//###########################################################################
//# Class Information
//###########################################################################

const ClassInfo CLASSINFO[] = {
$FOREACH-CLASS
$IF-REF
  ClassInfo(CLASS_$CLASSNAME,
            "$FULLCLASSNAME",
            $IF-HASBASECLASS &CLASSINFO[CLASS_$BASECLASSNAME] $ELSE 0$ENDIF,
            $NUMMETHODS,
            $NUMFIELDS,
            $IF-HASMEMBERS METHODINFO_$CLASSNAME $ELSE 0$ENDIF)$COMMA$
$ENDIF
$ENDFOR
};

}  /* namespace jni */
